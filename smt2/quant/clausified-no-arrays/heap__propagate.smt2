(set-info :origin "Horn problem converted to SMT-LIB2 using Eldarica (https://github.com/uuverifiers/eldarica)")
(set-logic HORN)
(declare-fun INV_MAIN_42 (Int Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int))(=> (and (and (and (and (not (and (= I D) (not (= J E)))) (= B 0)) (= F A)) (= G 0)) (= H C)) (INV_MAIN_42 A B C D E F G H I J))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int)) (not (and (and (and (and (INV_MAIN_42 A B C D E F G H I J) (not (>= (- C B) 1))) (not (>= (- H G) 1))) (not (= J E))) (= I D)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int)) (not (and (and (and (INV_MAIN_42 A B C D E F G H I J) (not (>= (- C B) 1))) (not (>= G B))) (not (>= (- H G) 1))))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int)) (not (and (and (and (INV_MAIN_42 A B C D E F G H I J) (not (>= (- C B) 1))) (not (<= G B))) (not (>= (- H G) 1))))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (INV_MAIN_42 K L M N O P Q R S T) (not (>= (- B C) 1))) (not (>= G 0))) (not (>= (- G H) 1))) (= (+ D (- (* (- 4) B) A)) 0)) (= (+ I (- (* (- 4) G) F)) 0)) (= K A)) (= (- L B) (- 1))) (= M C)) (= (+ N (- (* (- 4) B) A)) (- 4))) (= O E)) (= P F)) (= (- Q G) (- 1))) (= R H)) (= S F)) (= T J)) (INV_MAIN_42 A B C D E F G H I J))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (INV_MAIN_42 K L M N O P Q R S T) (not (>= (- B C) 1))) (not (<= G 0))) (not (>= (- G H) 1))) (= (+ D (- (* (- 4) B) A)) 0)) (= (+ I (- (* (- 4) G) F)) 0)) (= K A)) (= (- L B) (- 1))) (= M C)) (= (+ N (- (* (- 4) B) A)) (- 4))) (= O E)) (= P F)) (= (- Q G) (- 1))) (= R H)) (= S F)) (= T J)) (INV_MAIN_42 A B C D E F G H I J))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (INV_MAIN_42 K L M N O P Q R S T) (INV_MAIN_42 U V W X Y Z A1 B1 C1 D1)) (not (and (= (+ D (- (* (- 4) B) A)) 0) (not (= O E))))) (not (and (= (+ D (- (* (- 4) B) A)) (- 4)) (not (= O E))))) (not (>= (- B C) 1))) (not (>= G 0))) (not (>= (- G H) 1))) (= (+ I (- (* (- 4) G) F)) 0)) (= U A)) (= (- V B) (- 1))) (= W C)) (= X D)) (= Y E)) (= Z F)) (= (- A1 G) (- 1))) (= B1 H)) (= C1 F)) (= D1 J)) (= K A)) (= (- L B) (- 1))) (= M C)) (= (+ N (- (* (- 4) B) A)) (- 4))) (= P F)) (= (- Q G) (- 1))) (= R H)) (= S F)) (= T J)) (INV_MAIN_42 A B C D E F G H I J))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (INV_MAIN_42 K L M N O P Q R S T) (INV_MAIN_42 U V W X Y Z A1 B1 C1 D1)) (not (and (= (+ D (- (* (- 4) B) A)) 0) (not (= O E))))) (not (and (= (+ D (- (* (- 4) B) A)) (- 4)) (not (= O E))))) (not (>= (- B C) 1))) (not (<= G 0))) (not (>= (- G H) 1))) (= (+ I (- (* (- 4) G) F)) 0)) (= U A)) (= (- V B) (- 1))) (= W C)) (= X D)) (= Y E)) (= Z F)) (= (- A1 G) (- 1))) (= B1 H)) (= C1 F)) (= D1 J)) (= K A)) (= (- L B) (- 1))) (= M C)) (= (+ N (- (* (- 4) B) A)) (- 4))) (= P F)) (= (- Q G) (- 1))) (= R H)) (= S F)) (= T J)) (INV_MAIN_42 A B C D E F G H I J))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (INV_MAIN_42 K L M N O P Q R S T) (INV_MAIN_42 U V W X Y Z A1 B1 C1 D1)) (INV_MAIN_42 E1 F1 G1 H1 I1 J1 K1 L1 M1 N1)) (INV_MAIN_42 O1 P1 Q1 R1 S1 T1 U1 V1 W1 X1)) (not (and (= (+ D (- (* (- 4) B) A)) 0) (not (= Y E))))) (not (and (= (+ D (- (* (- 4) B) A)) (- 4)) (not (= Y E))))) (not (and (= I F) (not (= N1 J))))) (not (and (= (+ I (- (* (- 4) G) F)) 0) (not (= N1 J))))) (not (>= (- B C) 1))) (not (>= (- G H) 1))) (= O1 A)) (= (- P1 B) (- 1))) (= Q1 C)) (= R1 D)) (= S1 E)) (= T1 F)) (= (- U1 G) (- 1))) (= V1 H)) (= W1 I)) (= X1 J)) (= E1 A)) (= (- F1 B) (- 1))) (= G1 C)) (= H1 D)) (= I1 E)) (= J1 F)) (= (- K1 G) (- 1))) (= L1 H)) (= M1 F)) (= U A)) (= (- V B) (- 1))) (= W C)) (= (+ X (- (* (- 4) B) A)) (- 4))) (= Z F)) (= (- A1 G) (- 1))) (= B1 H)) (= C1 I)) (= D1 J)) (= K A)) (= (- L B) (- 1))) (= M C)) (= (+ N (- (* (- 4) B) A)) (- 4))) (= O Y)) (= P F)) (= (- Q G) (- 1))) (= R H)) (= S F)) (= T N1)) (INV_MAIN_42 A B C D E F G H I J))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (INV_MAIN_42 K L M N O P Q R S T) (INV_MAIN_42 U V W X Y Z A1 B1 C1 D1)) (not (and (= I F) (not (= T J))))) (not (and (= (+ I (- (* (- 4) G) F)) 0) (not (= T J))))) (not (>= (- B C) 1))) (not (>= (- G H) 1))) (= (+ D (- (* (- 4) B) A)) 0)) (= U A)) (= (- V B) (- 1))) (= W C)) (= (+ X (- (* (- 4) B) A)) (- 4))) (= Y E)) (= Z F)) (= (- A1 G) (- 1))) (= B1 H)) (= C1 I)) (= D1 J)) (= K A)) (= (- L B) (- 1))) (= M C)) (= (+ N (- (* (- 4) B) A)) (- 4))) (= O E)) (= P F)) (= (- Q G) (- 1))) (= R H)) (= S F)) (INV_MAIN_42 A B C D E F G H I J))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (INV_MAIN_42 K L M N O P Q R S T) (not (>= (- B C) 1))) (not (>= (- H G) 1))) (= (+ D (- (* (- 4) B) A)) 0)) (= K A)) (= (- L B) (- 1))) (= M C)) (= (+ N (- (* (- 4) B) A)) (- 4))) (= O E)) (= P F)) (= Q G)) (= R H)) (= S I)) (= T J)) (INV_MAIN_42 A B C D E F G H I J))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (INV_MAIN_42 K L M N O P Q R S T) (INV_MAIN_42 U V W X Y Z A1 B1 C1 D1)) (not (and (= (+ D (- (* (- 4) B) A)) 0) (not (= O E))))) (not (and (= (+ D (- (* (- 4) B) A)) (- 4)) (not (= O E))))) (not (>= (- B C) 1))) (not (>= (- H G) 1))) (= U A)) (= (- V B) (- 1))) (= W C)) (= X D)) (= Y E)) (= Z F)) (= A1 G)) (= B1 H)) (= C1 I)) (= D1 J)) (= K A)) (= (- L B) (- 1))) (= M C)) (= (+ N (- (* (- 4) B) A)) (- 4))) (= P F)) (= Q G)) (= R H)) (= S I)) (= T J)) (INV_MAIN_42 A B C D E F G H I J))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (INV_MAIN_42 K L M N O P Q R S T) (not (>= (- C B) 1))) (not (<= G 0))) (not (>= (- G H) 1))) (= (+ I (- (* (- 4) G) F)) 0)) (= K A)) (= L B)) (= M C)) (= N D)) (= O E)) (= P F)) (= (- Q G) (- 1))) (= R H)) (= S F)) (= T J)) (INV_MAIN_42 A B C D E F G H I J))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (INV_MAIN_42 K L M N O P Q R S T) (not (>= (- C B) 1))) (not (>= G 0))) (not (>= (- G H) 1))) (= (+ I (- (* (- 4) G) F)) 0)) (= K A)) (= L B)) (= M C)) (= N D)) (= O E)) (= P F)) (= (- Q G) (- 1))) (= R H)) (= S F)) (= T J)) (INV_MAIN_42 A B C D E F G H I J))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (INV_MAIN_42 K L M N O P Q R S T) (INV_MAIN_42 U V W X Y Z A1 B1 C1 D1)) (not (and (= I F) (not (= T J))))) (not (and (= (+ I (- (* (- 4) G) F)) 0) (not (= T J))))) (not (>= (- C B) 1))) (not (>= (- G H) 1))) (= U A)) (= V B)) (= W C)) (= X D)) (= Y E)) (= Z F)) (= (- A1 G) (- 1))) (= B1 H)) (= C1 I)) (= D1 J)) (= K A)) (= L B)) (= M C)) (= N D)) (= O E)) (= P F)) (= (- Q G) (- 1))) (= R H)) (= S F)) (INV_MAIN_42 A B C D E F G H I J))))
(check-sat)
