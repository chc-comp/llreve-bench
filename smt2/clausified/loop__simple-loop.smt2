(set-info :origin "Horn problem converted to SMT-LIB2 using Eldarica (https://github.com/uuverifiers/eldarica)")
(set-logic HORN)
(declare-fun INV_MAIN_42 (Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int))(=> (and (and (= (* (- 1) A) 0) (= (* (- 1) B) (- 1))) (= C D)) (INV_MAIN_42 A B))))
(assert (forall ((A Int) (B Int)) (not (and (and (and (not (= A B)) (not (<= B 10))) (not (<= A 10))) (INV_MAIN_42 A B)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int))(=> (and (and (and (and (= (+ C 1) A) (= (+ D 1) B)) (<= D 10)) (<= C 10)) (INV_MAIN_42 C D)) (INV_MAIN_42 A B))))
(assert (forall ((A Int) (B Int) (C Int))(=> (and (and (and (= (+ C 1) A) (not (<= B 10))) (<= C 10)) (INV_MAIN_42 C B)) (INV_MAIN_42 A B))))
(assert (forall ((A Int) (B Int) (C Int))(=> (and (and (and (= (+ C 1) B) (not (<= A 10))) (<= C 10)) (INV_MAIN_42 A C)) (INV_MAIN_42 A B))))
(check-sat)
