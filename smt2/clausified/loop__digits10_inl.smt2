(set-info :origin "Horn problem converted to SMT-LIB2 using Eldarica (https://github.com/uuverifiers/eldarica)")
(set-logic HORN)
(declare-fun INV_MAIN_42 (Int Int Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int))(=> (and (and (and (and (and (and (= (* (- 1) B) (- 1)) (= (* (- 1) C) (- 1))) (= (* (- 1) E) (- 1))) (= (* (- 1) F) 1)) (>= (+ (- (* 10 A) (+ G (- 10))) (- 1)) 0)) (>= (+ G (* (- 10) A)) 0)) (= G D)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) (not (and (and (and (not (= A B)) (= C 0)) (not (>= (+ D (- 1)) 0))) (INV_MAIN_42 D A C E F B)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ (+ (+ F 1) 1) 1) 1) B) (= (* (- 1) C) 0)) (>= (+ (- (* 10 A) (+ G (- 10))) (- 1)) 0)) (>= (+ (- (* 10 G) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ (- (* 10 I) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) I)) 0)) (>= (+ K (* (- 10) H)) 0)) (>= (+ (- (* 10 K) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) K)) 0)) (>= (+ L (* (- 10) G)) 0)) (>= (+ (- (* 10 L) (+ M (- 10))) (- 1)) 0)) (>= (+ (- (* 10 M) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) M)) 0)) (>= (+ N (* (- 10) L)) 0)) (>= (+ (- (* 10 N) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) N)) 0)) (>= (+ O (* (- 10) A)) 0)) (>= (+ (- (* 10 O) (+ P (- 10))) (- 1)) 0)) (>= (+ (- (* 10 P) (+ Q (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Q) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) Q)) 0)) (>= (+ R (* (- 10) P)) 0)) (>= (+ (- (* 10 R) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) R)) 0)) (>= (+ S (* (- 10) O)) 0)) (>= (+ (- (* 10 S) (+ T (- 10))) (- 1)) 0)) (>= (+ (- (* 10 T) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) T)) 0)) (>= (+ U (* (- 10) S)) 0)) (>= (+ (- (* 10 U) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) U)) 0)) (>= (+ (- 10 D) (- 1)) 0)) (not (= V 0))) (>= (+ W (- 1)) 0)) (>= (+ (- (* 10 W) (+ X (- 10))) (- 1)) 0)) (>= (+ (- (* 10 X) (+ Y (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Y) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) Y)) 0)) (>= (+ Z (* (- 10) X)) 0)) (>= (+ (- (* 10 Z) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) Z)) 0)) (>= (+ A1 (* (- 10) W)) 0)) (>= (+ (- (* 10 A1) (+ B1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 B1) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) B1)) 0)) (>= (+ C1 (* (- 10) A1)) 0)) (>= (+ (- (* 10 C1) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) C1)) 0)) (>= (+ D1 (- 1)) 0)) (>= (+ (- (* 10 D1) (+ E1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 E1) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) E1)) 0)) (>= (+ F1 (* (- 10) D1)) 0)) (>= (+ (- (* 10 F1) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) F1)) 0)) (>= (+ G1 (- 1)) 0)) (>= (+ (- (* 10 G1) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) G1)) 0)) (>= (+ J (- 1)) 0)) (INV_MAIN_42 J F V D E H1)) (INV_MAIN_42 A B C D E E))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ (+ (+ G 1) 1) 1) 1) B) (= (* (- 1) C) 0)) (= (+ E 1) F)) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ (- (* 10 I) (+ J (- 10))) (- 1)) 0)) (>= (+ (- (* 10 J) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) J)) 0)) (>= (+ L (* (- 10) I)) 0)) (>= (+ (- (* 10 L) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) L)) 0)) (>= (+ M (* (- 10) H)) 0)) (>= (+ (- (* 10 M) (+ N (- 10))) (- 1)) 0)) (>= (+ (- (* 10 N) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) N)) 0)) (>= (+ O (* (- 10) M)) 0)) (>= (+ (- (* 10 O) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) O)) 0)) (>= (+ P (* (- 10) A)) 0)) (>= (+ (- (* 10 P) (+ Q (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Q) (+ R (- 10))) (- 1)) 0)) (>= (+ (- (* 10 R) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) R)) 0)) (>= (+ S (* (- 10) Q)) 0)) (>= (+ (- (* 10 S) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) S)) 0)) (>= (+ T (* (- 10) P)) 0)) (>= (+ (- (* 10 T) (+ U (- 10))) (- 1)) 0)) (>= (+ (- (* 10 U) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) U)) 0)) (>= (+ V (* (- 10) T)) 0)) (>= (+ (- (* 10 V) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) V)) 0)) (>= (+ (- 100 D) (- 1)) 0)) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= W 0))) (>= (+ X (- 1)) 0)) (>= (+ (- (* 10 X) (+ Y (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Y) (+ Z (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Z) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) Z)) 0)) (>= (+ A1 (* (- 10) Y)) 0)) (>= (+ (- (* 10 A1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) A1)) 0)) (>= (+ B1 (* (- 10) X)) 0)) (>= (+ (- (* 10 B1) (+ C1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 C1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) C1)) 0)) (>= (+ D1 (* (- 10) B1)) 0)) (>= (+ (- (* 10 D1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) D1)) 0)) (>= (+ E1 (- 1)) 0)) (>= (+ (- (* 10 E1) (+ F1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 F1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) F1)) 0)) (>= (+ G1 (* (- 10) E1)) 0)) (>= (+ (- (* 10 G1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) G1)) 0)) (>= (+ H1 (- 1)) 0)) (>= (+ (- (* 10 H1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) H1)) 0)) (>= (+ K (- 1)) 0)) (INV_MAIN_42 K G W D E I1)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ (+ (+ G 1) 1) 1) 1) B) (= (* (- 1) C) 0)) (= (+ E 2) F)) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ (- (* 10 I) (+ J (- 10))) (- 1)) 0)) (>= (+ (- (* 10 J) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) J)) 0)) (>= (+ L (* (- 10) I)) 0)) (>= (+ (- (* 10 L) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) L)) 0)) (>= (+ M (* (- 10) H)) 0)) (>= (+ (- (* 10 M) (+ N (- 10))) (- 1)) 0)) (>= (+ (- (* 10 N) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) N)) 0)) (>= (+ O (* (- 10) M)) 0)) (>= (+ (- (* 10 O) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) O)) 0)) (>= (+ P (* (- 10) A)) 0)) (>= (+ (- (* 10 P) (+ Q (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Q) (+ R (- 10))) (- 1)) 0)) (>= (+ (- (* 10 R) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) R)) 0)) (>= (+ S (* (- 10) Q)) 0)) (>= (+ (- (* 10 S) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) S)) 0)) (>= (+ T (* (- 10) P)) 0)) (>= (+ (- (* 10 T) (+ U (- 10))) (- 1)) 0)) (>= (+ (- (* 10 U) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) U)) 0)) (>= (+ V (* (- 10) T)) 0)) (>= (+ (- (* 10 V) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) V)) 0)) (>= (+ (- 1000 D) (- 1)) 0)) (not (>= (+ (- 100 D) (- 1)) 0))) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= W 0))) (>= (+ X (- 1)) 0)) (>= (+ (- (* 10 X) (+ Y (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Y) (+ Z (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Z) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) Z)) 0)) (>= (+ A1 (* (- 10) Y)) 0)) (>= (+ (- (* 10 A1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) A1)) 0)) (>= (+ B1 (* (- 10) X)) 0)) (>= (+ (- (* 10 B1) (+ C1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 C1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) C1)) 0)) (>= (+ D1 (* (- 10) B1)) 0)) (>= (+ (- (* 10 D1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) D1)) 0)) (>= (+ E1 (- 1)) 0)) (>= (+ (- (* 10 E1) (+ F1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 F1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) F1)) 0)) (>= (+ G1 (* (- 10) E1)) 0)) (>= (+ (- (* 10 G1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) G1)) 0)) (>= (+ H1 (- 1)) 0)) (>= (+ (- (* 10 H1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) H1)) 0)) (>= (+ K (- 1)) 0)) (INV_MAIN_42 K G W D E I1)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ (+ (+ G 1) 1) 1) 1) B) (= (* (- 1) C) 0)) (= (+ E 3) F)) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ (- (* 10 I) (+ J (- 10))) (- 1)) 0)) (>= (+ (- (* 10 J) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) J)) 0)) (>= (+ L (* (- 10) I)) 0)) (>= (+ (- (* 10 L) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) L)) 0)) (>= (+ M (* (- 10) H)) 0)) (>= (+ (- (* 10 M) (+ N (- 10))) (- 1)) 0)) (>= (+ (- (* 10 N) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) N)) 0)) (>= (+ O (* (- 10) M)) 0)) (>= (+ (- (* 10 O) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) O)) 0)) (>= (+ P (* (- 10) A)) 0)) (>= (+ (- (* 10 P) (+ Q (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Q) (+ R (- 10))) (- 1)) 0)) (>= (+ (- (* 10 R) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) R)) 0)) (>= (+ S (* (- 10) Q)) 0)) (>= (+ (- (* 10 S) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) S)) 0)) (>= (+ T (* (- 10) P)) 0)) (>= (+ (- (* 10 T) (+ U (- 10))) (- 1)) 0)) (>= (+ (- (* 10 U) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) U)) 0)) (>= (+ V (* (- 10) T)) 0)) (>= (+ (- (* 10 V) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) V)) 0)) (>= (+ (- 10000 D) (- 1)) 0)) (not (>= (+ (- 1000 D) (- 1)) 0))) (not (>= (+ (- 100 D) (- 1)) 0))) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= W 0))) (>= (+ X (- 1)) 0)) (>= (+ (- (* 10 X) (+ Y (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Y) (+ Z (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Z) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) Z)) 0)) (>= (+ A1 (* (- 10) Y)) 0)) (>= (+ (- (* 10 A1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) A1)) 0)) (>= (+ B1 (* (- 10) X)) 0)) (>= (+ (- (* 10 B1) (+ C1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 C1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) C1)) 0)) (>= (+ D1 (* (- 10) B1)) 0)) (>= (+ (- (* 10 D1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) D1)) 0)) (>= (+ E1 (- 1)) 0)) (>= (+ (- (* 10 E1) (+ F1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 F1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) F1)) 0)) (>= (+ G1 (* (- 10) E1)) 0)) (>= (+ (- (* 10 G1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) G1)) 0)) (>= (+ H1 (- 1)) 0)) (>= (+ (- (* 10 H1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) H1)) 0)) (>= (+ K (- 1)) 0)) (INV_MAIN_42 K G W D E I1)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ (+ (+ G 1) 1) 1) 1) B) (= (+ H 4) E)) (>= (+ (- (* 10000 D) (+ I (- 10000))) (- 1)) 0)) (>= (+ I (* (- 10000) D)) 0)) (>= (+ (- (* 10 A) (+ J (- 10))) (- 1)) 0)) (>= (+ (- (* 10 J) (+ K (- 10))) (- 1)) 0)) (>= (+ (- (* 10 K) (+ L (- 10))) (- 1)) 0)) (>= (+ (- (* 10 L) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) L)) 0)) (>= (+ N (* (- 10) K)) 0)) (>= (+ (- (* 10 N) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) N)) 0)) (>= (+ O (* (- 10) J)) 0)) (>= (+ (- (* 10 O) (+ P (- 10))) (- 1)) 0)) (>= (+ (- (* 10 P) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) P)) 0)) (>= (+ Q (* (- 10) O)) 0)) (>= (+ (- (* 10 Q) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) Q)) 0)) (>= (+ R (* (- 10) A)) 0)) (>= (+ (- (* 10 R) (+ S (- 10))) (- 1)) 0)) (>= (+ (- (* 10 S) (+ T (- 10))) (- 1)) 0)) (>= (+ (- (* 10 T) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) T)) 0)) (>= (+ U (* (- 10) S)) 0)) (>= (+ (- (* 10 U) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) U)) 0)) (>= (+ V (* (- 10) R)) 0)) (>= (+ (- (* 10 V) (+ W (- 10))) (- 1)) 0)) (>= (+ (- (* 10 W) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) W)) 0)) (>= (+ X (* (- 10) V)) 0)) (>= (+ (- (* 10 X) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) X)) 0)) (not (>= (+ (- 10000 I) (- 1)) 0))) (not (>= (+ (- 1000 I) (- 1)) 0))) (not (>= (+ (- 100 I) (- 1)) 0))) (not (>= (+ (- 10 I) (- 1)) 0))) (not (= C 0))) (>= (+ Y (- 1)) 0)) (>= (+ (- (* 10 Y) (+ Z (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Z) (+ A1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 A1) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) A1)) 0)) (>= (+ B1 (* (- 10) Z)) 0)) (>= (+ (- (* 10 B1) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) B1)) 0)) (>= (+ C1 (* (- 10) Y)) 0)) (>= (+ (- (* 10 C1) (+ D1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 D1) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) D1)) 0)) (>= (+ E1 (* (- 10) C1)) 0)) (>= (+ (- (* 10 E1) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) E1)) 0)) (>= (+ F1 (- 1)) 0)) (>= (+ (- (* 10 F1) (+ G1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 G1) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) G1)) 0)) (>= (+ H1 (* (- 10) F1)) 0)) (>= (+ (- (* 10 H1) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) H1)) 0)) (>= (+ I1 (- 1)) 0)) (>= (+ (- (* 10 I1) (+ M (- 10))) (- 1)) 0)) (>= (+ M (* (- 10) I1)) 0)) (>= (+ M (- 1)) 0)) (INV_MAIN_42 M G C I H F)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ (+ F 1) 1) 1) B) (= (* (- 1) C) 0)) (>= (+ (- (* 10 A) (+ G (- 10))) (- 1)) 0)) (>= (+ (- (* 10 G) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) H)) 0)) (>= (+ J (* (- 10) G)) 0)) (>= (+ (- (* 10 J) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) J)) 0)) (>= (+ K (* (- 10) A)) 0)) (>= (+ (- (* 10 K) (+ L (- 10))) (- 1)) 0)) (>= (+ (- (* 10 L) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) L)) 0)) (>= (+ M (* (- 10) K)) 0)) (>= (+ (- (* 10 M) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) M)) 0)) (>= (+ (- 10 D) (- 1)) 0)) (not (= N 0))) (not (>= (+ O (- 1)) 0))) (>= (+ (- (* 10 O) (+ P (- 10))) (- 1)) 0)) (>= (+ (- (* 10 P) (+ Q (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Q) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) Q)) 0)) (>= (+ R (* (- 10) P)) 0)) (>= (+ (- (* 10 R) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) R)) 0)) (>= (+ S (* (- 10) O)) 0)) (>= (+ (- (* 10 S) (+ T (- 10))) (- 1)) 0)) (>= (+ (- (* 10 T) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) T)) 0)) (>= (+ U (* (- 10) S)) 0)) (>= (+ (- (* 10 U) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) U)) 0)) (>= (+ V (- 1)) 0)) (>= (+ (- (* 10 V) (+ W (- 10))) (- 1)) 0)) (>= (+ (- (* 10 W) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) W)) 0)) (>= (+ X (* (- 10) V)) 0)) (>= (+ (- (* 10 X) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) X)) 0)) (>= (+ Y (- 1)) 0)) (>= (+ (- (* 10 Y) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) Y)) 0)) (>= (+ I (- 1)) 0)) (INV_MAIN_42 I F N D E Z)) (INV_MAIN_42 A B C D E E))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ (+ G 1) 1) 1) B) (= (* (- 1) C) 0)) (= (+ E 1) F)) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ (- (* 10 I) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) I)) 0)) (>= (+ K (* (- 10) H)) 0)) (>= (+ (- (* 10 K) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) K)) 0)) (>= (+ L (* (- 10) A)) 0)) (>= (+ (- (* 10 L) (+ M (- 10))) (- 1)) 0)) (>= (+ (- (* 10 M) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) M)) 0)) (>= (+ N (* (- 10) L)) 0)) (>= (+ (- (* 10 N) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) N)) 0)) (>= (+ (- 100 D) (- 1)) 0)) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= O 0))) (not (>= (+ P (- 1)) 0))) (>= (+ (- (* 10 P) (+ Q (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Q) (+ R (- 10))) (- 1)) 0)) (>= (+ (- (* 10 R) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) R)) 0)) (>= (+ S (* (- 10) Q)) 0)) (>= (+ (- (* 10 S) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) S)) 0)) (>= (+ T (* (- 10) P)) 0)) (>= (+ (- (* 10 T) (+ U (- 10))) (- 1)) 0)) (>= (+ (- (* 10 U) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) U)) 0)) (>= (+ V (* (- 10) T)) 0)) (>= (+ (- (* 10 V) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) V)) 0)) (>= (+ W (- 1)) 0)) (>= (+ (- (* 10 W) (+ X (- 10))) (- 1)) 0)) (>= (+ (- (* 10 X) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) X)) 0)) (>= (+ Y (* (- 10) W)) 0)) (>= (+ (- (* 10 Y) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) Y)) 0)) (>= (+ Z (- 1)) 0)) (>= (+ (- (* 10 Z) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) Z)) 0)) (>= (+ J (- 1)) 0)) (INV_MAIN_42 J G O D E A1)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ (+ G 1) 1) 1) B) (= (* (- 1) C) 0)) (= (+ E 2) F)) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ (- (* 10 I) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) I)) 0)) (>= (+ K (* (- 10) H)) 0)) (>= (+ (- (* 10 K) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) K)) 0)) (>= (+ L (* (- 10) A)) 0)) (>= (+ (- (* 10 L) (+ M (- 10))) (- 1)) 0)) (>= (+ (- (* 10 M) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) M)) 0)) (>= (+ N (* (- 10) L)) 0)) (>= (+ (- (* 10 N) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) N)) 0)) (>= (+ (- 1000 D) (- 1)) 0)) (not (>= (+ (- 100 D) (- 1)) 0))) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= O 0))) (not (>= (+ P (- 1)) 0))) (>= (+ (- (* 10 P) (+ Q (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Q) (+ R (- 10))) (- 1)) 0)) (>= (+ (- (* 10 R) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) R)) 0)) (>= (+ S (* (- 10) Q)) 0)) (>= (+ (- (* 10 S) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) S)) 0)) (>= (+ T (* (- 10) P)) 0)) (>= (+ (- (* 10 T) (+ U (- 10))) (- 1)) 0)) (>= (+ (- (* 10 U) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) U)) 0)) (>= (+ V (* (- 10) T)) 0)) (>= (+ (- (* 10 V) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) V)) 0)) (>= (+ W (- 1)) 0)) (>= (+ (- (* 10 W) (+ X (- 10))) (- 1)) 0)) (>= (+ (- (* 10 X) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) X)) 0)) (>= (+ Y (* (- 10) W)) 0)) (>= (+ (- (* 10 Y) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) Y)) 0)) (>= (+ Z (- 1)) 0)) (>= (+ (- (* 10 Z) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) Z)) 0)) (>= (+ J (- 1)) 0)) (INV_MAIN_42 J G O D E A1)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ (+ G 1) 1) 1) B) (= (* (- 1) C) 0)) (= (+ E 3) F)) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ (- (* 10 I) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) I)) 0)) (>= (+ K (* (- 10) H)) 0)) (>= (+ (- (* 10 K) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) K)) 0)) (>= (+ L (* (- 10) A)) 0)) (>= (+ (- (* 10 L) (+ M (- 10))) (- 1)) 0)) (>= (+ (- (* 10 M) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) M)) 0)) (>= (+ N (* (- 10) L)) 0)) (>= (+ (- (* 10 N) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) N)) 0)) (>= (+ (- 10000 D) (- 1)) 0)) (not (>= (+ (- 1000 D) (- 1)) 0))) (not (>= (+ (- 100 D) (- 1)) 0))) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= O 0))) (not (>= (+ P (- 1)) 0))) (>= (+ (- (* 10 P) (+ Q (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Q) (+ R (- 10))) (- 1)) 0)) (>= (+ (- (* 10 R) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) R)) 0)) (>= (+ S (* (- 10) Q)) 0)) (>= (+ (- (* 10 S) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) S)) 0)) (>= (+ T (* (- 10) P)) 0)) (>= (+ (- (* 10 T) (+ U (- 10))) (- 1)) 0)) (>= (+ (- (* 10 U) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) U)) 0)) (>= (+ V (* (- 10) T)) 0)) (>= (+ (- (* 10 V) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) V)) 0)) (>= (+ W (- 1)) 0)) (>= (+ (- (* 10 W) (+ X (- 10))) (- 1)) 0)) (>= (+ (- (* 10 X) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) X)) 0)) (>= (+ Y (* (- 10) W)) 0)) (>= (+ (- (* 10 Y) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) Y)) 0)) (>= (+ Z (- 1)) 0)) (>= (+ (- (* 10 Z) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) Z)) 0)) (>= (+ J (- 1)) 0)) (INV_MAIN_42 J G O D E A1)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ (+ G 1) 1) 1) B) (= (+ H 4) E)) (>= (+ (- (* 10000 D) (+ I (- 10000))) (- 1)) 0)) (>= (+ I (* (- 10000) D)) 0)) (>= (+ (- (* 10 A) (+ J (- 10))) (- 1)) 0)) (>= (+ (- (* 10 J) (+ K (- 10))) (- 1)) 0)) (>= (+ (- (* 10 K) (+ L (- 10))) (- 1)) 0)) (>= (+ L (* (- 10) K)) 0)) (>= (+ M (* (- 10) J)) 0)) (>= (+ (- (* 10 M) (+ L (- 10))) (- 1)) 0)) (>= (+ L (* (- 10) M)) 0)) (>= (+ N (* (- 10) A)) 0)) (>= (+ (- (* 10 N) (+ O (- 10))) (- 1)) 0)) (>= (+ (- (* 10 O) (+ L (- 10))) (- 1)) 0)) (>= (+ L (* (- 10) O)) 0)) (>= (+ P (* (- 10) N)) 0)) (>= (+ (- (* 10 P) (+ L (- 10))) (- 1)) 0)) (>= (+ L (* (- 10) P)) 0)) (not (>= (+ (- 10000 I) (- 1)) 0))) (not (>= (+ (- 1000 I) (- 1)) 0))) (not (>= (+ (- 100 I) (- 1)) 0))) (not (>= (+ (- 10 I) (- 1)) 0))) (not (= C 0))) (not (>= (+ Q (- 1)) 0))) (>= (+ (- (* 10 Q) (+ R (- 10))) (- 1)) 0)) (>= (+ (- (* 10 R) (+ S (- 10))) (- 1)) 0)) (>= (+ (- (* 10 S) (+ L (- 10))) (- 1)) 0)) (>= (+ L (* (- 10) S)) 0)) (>= (+ T (* (- 10) R)) 0)) (>= (+ (- (* 10 T) (+ L (- 10))) (- 1)) 0)) (>= (+ L (* (- 10) T)) 0)) (>= (+ U (* (- 10) Q)) 0)) (>= (+ (- (* 10 U) (+ V (- 10))) (- 1)) 0)) (>= (+ (- (* 10 V) (+ L (- 10))) (- 1)) 0)) (>= (+ L (* (- 10) V)) 0)) (>= (+ W (* (- 10) U)) 0)) (>= (+ (- (* 10 W) (+ L (- 10))) (- 1)) 0)) (>= (+ L (* (- 10) W)) 0)) (>= (+ X (- 1)) 0)) (>= (+ (- (* 10 X) (+ Y (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Y) (+ L (- 10))) (- 1)) 0)) (>= (+ L (* (- 10) Y)) 0)) (>= (+ Z (* (- 10) X)) 0)) (>= (+ (- (* 10 Z) (+ L (- 10))) (- 1)) 0)) (>= (+ L (* (- 10) Z)) 0)) (>= (+ A1 (- 1)) 0)) (>= (+ (- (* 10 A1) (+ L (- 10))) (- 1)) 0)) (>= (+ L (* (- 10) A1)) 0)) (>= (+ L (- 1)) 0)) (INV_MAIN_42 L G C I H F)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ F 1) 1) B) (= (* (- 1) C) 0)) (>= (+ (- (* 10 A) (+ G (- 10))) (- 1)) 0)) (>= (+ (- (* 10 G) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) G)) 0)) (>= (+ I (* (- 10) A)) 0)) (>= (+ (- (* 10 I) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) I)) 0)) (>= (+ (- 10 D) (- 1)) 0)) (not (= J 0))) (not (>= (+ K (- 1)) 0))) (>= (+ (- (* 10 K) (+ L (- 10))) (- 1)) 0)) (>= (+ (- (* 10 L) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) L)) 0)) (>= (+ M (* (- 10) K)) 0)) (>= (+ (- (* 10 M) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) M)) 0)) (>= (+ N (- 1)) 0)) (>= (+ (- (* 10 N) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) N)) 0)) (>= (+ H (- 1)) 0)) (INV_MAIN_42 H F J D E O)) (INV_MAIN_42 A B C D E E))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ G 1) 1) B) (= (* (- 1) C) 0)) (= (+ E 1) F)) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) H)) 0)) (>= (+ J (* (- 10) A)) 0)) (>= (+ (- (* 10 J) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) J)) 0)) (>= (+ (- 100 D) (- 1)) 0)) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= K 0))) (not (>= (+ L (- 1)) 0))) (>= (+ (- (* 10 L) (+ M (- 10))) (- 1)) 0)) (>= (+ (- (* 10 M) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) M)) 0)) (>= (+ N (* (- 10) L)) 0)) (>= (+ (- (* 10 N) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) N)) 0)) (>= (+ O (- 1)) 0)) (>= (+ (- (* 10 O) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) O)) 0)) (>= (+ I (- 1)) 0)) (INV_MAIN_42 I G K D E P)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ G 1) 1) B) (= (* (- 1) C) 0)) (= (+ E 2) F)) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) H)) 0)) (>= (+ J (* (- 10) A)) 0)) (>= (+ (- (* 10 J) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) J)) 0)) (>= (+ (- 1000 D) (- 1)) 0)) (not (>= (+ (- 100 D) (- 1)) 0))) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= K 0))) (not (>= (+ L (- 1)) 0))) (>= (+ (- (* 10 L) (+ M (- 10))) (- 1)) 0)) (>= (+ (- (* 10 M) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) M)) 0)) (>= (+ N (* (- 10) L)) 0)) (>= (+ (- (* 10 N) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) N)) 0)) (>= (+ O (- 1)) 0)) (>= (+ (- (* 10 O) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) O)) 0)) (>= (+ I (- 1)) 0)) (INV_MAIN_42 I G K D E P)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ G 1) 1) B) (= (* (- 1) C) 0)) (= (+ E 3) F)) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) H)) 0)) (>= (+ J (* (- 10) A)) 0)) (>= (+ (- (* 10 J) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) J)) 0)) (>= (+ (- 10000 D) (- 1)) 0)) (not (>= (+ (- 1000 D) (- 1)) 0))) (not (>= (+ (- 100 D) (- 1)) 0))) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= K 0))) (not (>= (+ L (- 1)) 0))) (>= (+ (- (* 10 L) (+ M (- 10))) (- 1)) 0)) (>= (+ (- (* 10 M) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) M)) 0)) (>= (+ N (* (- 10) L)) 0)) (>= (+ (- (* 10 N) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) N)) 0)) (>= (+ O (- 1)) 0)) (>= (+ (- (* 10 O) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) O)) 0)) (>= (+ I (- 1)) 0)) (INV_MAIN_42 I G K D E P)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ G 1) 1) B) (= (+ H 4) E)) (>= (+ (- (* 10000 D) (+ I (- 10000))) (- 1)) 0)) (>= (+ I (* (- 10000) D)) 0)) (>= (+ (- (* 10 A) (+ J (- 10))) (- 1)) 0)) (>= (+ (- (* 10 J) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) J)) 0)) (>= (+ L (* (- 10) A)) 0)) (>= (+ (- (* 10 L) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) L)) 0)) (not (>= (+ (- 10000 I) (- 1)) 0))) (not (>= (+ (- 1000 I) (- 1)) 0))) (not (>= (+ (- 100 I) (- 1)) 0))) (not (>= (+ (- 10 I) (- 1)) 0))) (not (= C 0))) (not (>= (+ M (- 1)) 0))) (>= (+ (- (* 10 M) (+ N (- 10))) (- 1)) 0)) (>= (+ (- (* 10 N) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) N)) 0)) (>= (+ O (* (- 10) M)) 0)) (>= (+ (- (* 10 O) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) O)) 0)) (>= (+ P (- 1)) 0)) (>= (+ (- (* 10 P) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) P)) 0)) (>= (+ K (- 1)) 0)) (INV_MAIN_42 K G C I H F)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int))(=> (and (and (and (and (and (and (and (and (and (and (= (+ F 1) B) (= (* (- 1) C) 0)) (>= (+ (- (* 10 A) (+ G (- 10))) (- 1)) 0)) (>= (+ G (* (- 10) A)) 0)) (>= (+ (- 10 D) (- 1)) 0)) (not (= H 0))) (not (>= (+ I (- 1)) 0))) (>= (+ (- (* 10 I) (+ G (- 10))) (- 1)) 0)) (>= (+ G (* (- 10) I)) 0)) (>= (+ G (- 1)) 0)) (INV_MAIN_42 G F H D E J)) (INV_MAIN_42 A B C D E E))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (= (+ G 1) B) (= (* (- 1) C) 0)) (= (+ E 1) F)) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) A)) 0)) (>= (+ (- 100 D) (- 1)) 0)) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= I 0))) (not (>= (+ J (- 1)) 0))) (>= (+ (- (* 10 J) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) J)) 0)) (>= (+ H (- 1)) 0)) (INV_MAIN_42 H G I D E K)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ G 1) B) (= (* (- 1) C) 0)) (= (+ E 2) F)) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) A)) 0)) (>= (+ (- 1000 D) (- 1)) 0)) (not (>= (+ (- 100 D) (- 1)) 0))) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= I 0))) (not (>= (+ J (- 1)) 0))) (>= (+ (- (* 10 J) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) J)) 0)) (>= (+ H (- 1)) 0)) (INV_MAIN_42 H G I D E K)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ G 1) B) (= (* (- 1) C) 0)) (= (+ E 3) F)) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) A)) 0)) (>= (+ (- 10000 D) (- 1)) 0)) (not (>= (+ (- 1000 D) (- 1)) 0))) (not (>= (+ (- 100 D) (- 1)) 0))) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= I 0))) (not (>= (+ J (- 1)) 0))) (>= (+ (- (* 10 J) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) J)) 0)) (>= (+ H (- 1)) 0)) (INV_MAIN_42 H G I D E K)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ G 1) B) (= (+ H 4) E)) (>= (+ (- (* 10000 D) (+ I (- 10000))) (- 1)) 0)) (>= (+ I (* (- 10000) D)) 0)) (>= (+ (- (* 10 A) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) A)) 0)) (not (>= (+ (- 10000 I) (- 1)) 0))) (not (>= (+ (- 1000 I) (- 1)) 0))) (not (>= (+ (- 100 I) (- 1)) 0))) (not (>= (+ (- 10 I) (- 1)) 0))) (not (= C 0))) (not (>= (+ K (- 1)) 0))) (>= (+ (- (* 10 K) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) K)) 0)) (>= (+ J (- 1)) 0)) (INV_MAIN_42 J G C I H F)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ (+ (+ G 1) 1) 1) 1) B) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ (- (* 10 I) (+ J (- 10))) (- 1)) 0)) (>= (+ (- (* 10 J) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) J)) 0)) (>= (+ L (* (- 10) I)) 0)) (>= (+ (- (* 10 L) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) L)) 0)) (>= (+ M (* (- 10) H)) 0)) (>= (+ (- (* 10 M) (+ N (- 10))) (- 1)) 0)) (>= (+ (- (* 10 N) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) N)) 0)) (>= (+ O (* (- 10) M)) 0)) (>= (+ (- (* 10 O) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) O)) 0)) (>= (+ P (* (- 10) A)) 0)) (>= (+ (- (* 10 P) (+ Q (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Q) (+ R (- 10))) (- 1)) 0)) (>= (+ (- (* 10 R) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) R)) 0)) (>= (+ S (* (- 10) Q)) 0)) (>= (+ (- (* 10 S) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) S)) 0)) (>= (+ T (* (- 10) P)) 0)) (>= (+ (- (* 10 T) (+ U (- 10))) (- 1)) 0)) (>= (+ (- (* 10 U) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) U)) 0)) (>= (+ V (* (- 10) T)) 0)) (>= (+ (- (* 10 V) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) V)) 0)) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (and (not (>= (+ (- 100 D) (- 1)) 0)) (and (not (>= (+ (- 1000 D) (- 1)) 0)) (not (>= (+ (- 10000 D) (- 1)) 0)))))))) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (and (not (>= (+ (- 100 D) (- 1)) 0)) (and (not (>= (+ (- 1000 D) (- 1)) 0)) (>= (+ (- 10000 D) (- 1)) 0))))))) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (and (not (>= (+ (- 100 D) (- 1)) 0)) (>= (+ (- 1000 D) (- 1)) 0)))))) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (>= (+ (- 100 D) (- 1)) 0))))) (not (and (not (= C 0)) (>= (+ (- 10 D) (- 1)) 0)))) (>= (+ W (- 1)) 0)) (>= (+ (- (* 10 W) (+ X (- 10))) (- 1)) 0)) (>= (+ (- (* 10 X) (+ Y (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Y) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) Y)) 0)) (>= (+ Z (* (- 10) X)) 0)) (>= (+ (- (* 10 Z) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) Z)) 0)) (>= (+ A1 (* (- 10) W)) 0)) (>= (+ (- (* 10 A1) (+ B1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 B1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) B1)) 0)) (>= (+ C1 (* (- 10) A1)) 0)) (>= (+ (- (* 10 C1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) C1)) 0)) (>= (+ D1 (- 1)) 0)) (>= (+ (- (* 10 D1) (+ E1 (- 10))) (- 1)) 0)) (>= (+ (- (* 10 E1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) E1)) 0)) (>= (+ F1 (* (- 10) D1)) 0)) (>= (+ (- (* 10 F1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) F1)) 0)) (>= (+ G1 (- 1)) 0)) (>= (+ (- (* 10 G1) (+ K (- 10))) (- 1)) 0)) (>= (+ K (* (- 10) G1)) 0)) (>= (+ K (- 1)) 0)) (INV_MAIN_42 K G C D E F)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ (+ G 1) 1) 1) B) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ (- (* 10 I) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) I)) 0)) (>= (+ K (* (- 10) H)) 0)) (>= (+ (- (* 10 K) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) K)) 0)) (>= (+ L (* (- 10) A)) 0)) (>= (+ (- (* 10 L) (+ M (- 10))) (- 1)) 0)) (>= (+ (- (* 10 M) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) M)) 0)) (>= (+ N (* (- 10) L)) 0)) (>= (+ (- (* 10 N) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) N)) 0)) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (and (not (>= (+ (- 100 D) (- 1)) 0)) (and (not (>= (+ (- 1000 D) (- 1)) 0)) (not (>= (+ (- 10000 D) (- 1)) 0)))))))) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (and (not (>= (+ (- 100 D) (- 1)) 0)) (and (not (>= (+ (- 1000 D) (- 1)) 0)) (>= (+ (- 10000 D) (- 1)) 0))))))) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (and (not (>= (+ (- 100 D) (- 1)) 0)) (>= (+ (- 1000 D) (- 1)) 0)))))) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (>= (+ (- 100 D) (- 1)) 0))))) (not (and (not (= C 0)) (>= (+ (- 10 D) (- 1)) 0)))) (not (>= (+ O (- 1)) 0))) (>= (+ (- (* 10 O) (+ P (- 10))) (- 1)) 0)) (>= (+ (- (* 10 P) (+ Q (- 10))) (- 1)) 0)) (>= (+ (- (* 10 Q) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) Q)) 0)) (>= (+ R (* (- 10) P)) 0)) (>= (+ (- (* 10 R) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) R)) 0)) (>= (+ S (* (- 10) O)) 0)) (>= (+ (- (* 10 S) (+ T (- 10))) (- 1)) 0)) (>= (+ (- (* 10 T) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) T)) 0)) (>= (+ U (* (- 10) S)) 0)) (>= (+ (- (* 10 U) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) U)) 0)) (>= (+ V (- 1)) 0)) (>= (+ (- (* 10 V) (+ W (- 10))) (- 1)) 0)) (>= (+ (- (* 10 W) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) W)) 0)) (>= (+ X (* (- 10) V)) 0)) (>= (+ (- (* 10 X) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) X)) 0)) (>= (+ Y (- 1)) 0)) (>= (+ (- (* 10 Y) (+ J (- 10))) (- 1)) 0)) (>= (+ J (* (- 10) Y)) 0)) (>= (+ J (- 1)) 0)) (INV_MAIN_42 J G C D E F)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (+ (+ G 1) 1) B) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ (- (* 10 H) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) H)) 0)) (>= (+ J (* (- 10) A)) 0)) (>= (+ (- (* 10 J) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) J)) 0)) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (and (not (>= (+ (- 100 D) (- 1)) 0)) (and (not (>= (+ (- 1000 D) (- 1)) 0)) (not (>= (+ (- 10000 D) (- 1)) 0)))))))) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (and (not (>= (+ (- 100 D) (- 1)) 0)) (and (not (>= (+ (- 1000 D) (- 1)) 0)) (>= (+ (- 10000 D) (- 1)) 0))))))) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (and (not (>= (+ (- 100 D) (- 1)) 0)) (>= (+ (- 1000 D) (- 1)) 0)))))) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (>= (+ (- 100 D) (- 1)) 0))))) (not (and (not (= C 0)) (>= (+ (- 10 D) (- 1)) 0)))) (not (>= (+ K (- 1)) 0))) (>= (+ (- (* 10 K) (+ L (- 10))) (- 1)) 0)) (>= (+ (- (* 10 L) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) L)) 0)) (>= (+ M (* (- 10) K)) 0)) (>= (+ (- (* 10 M) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) M)) 0)) (>= (+ N (- 1)) 0)) (>= (+ (- (* 10 N) (+ I (- 10))) (- 1)) 0)) (>= (+ I (* (- 10) N)) 0)) (>= (+ I (- 1)) 0)) (INV_MAIN_42 I G C D E F)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (= (+ G 1) B) (>= (+ (- (* 10 A) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) A)) 0)) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (and (not (>= (+ (- 100 D) (- 1)) 0)) (and (not (>= (+ (- 1000 D) (- 1)) 0)) (not (>= (+ (- 10000 D) (- 1)) 0)))))))) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (and (not (>= (+ (- 100 D) (- 1)) 0)) (and (not (>= (+ (- 1000 D) (- 1)) 0)) (>= (+ (- 10000 D) (- 1)) 0))))))) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (and (not (>= (+ (- 100 D) (- 1)) 0)) (>= (+ (- 1000 D) (- 1)) 0)))))) (not (and (not (= C 0)) (and (not (>= (+ (- 10 D) (- 1)) 0)) (>= (+ (- 100 D) (- 1)) 0))))) (not (and (not (= C 0)) (>= (+ (- 10 D) (- 1)) 0)))) (not (>= (+ I (- 1)) 0))) (>= (+ (- (* 10 I) (+ H (- 10))) (- 1)) 0)) (>= (+ H (* (- 10) I)) 0)) (>= (+ H (- 1)) 0)) (INV_MAIN_42 H G C D E F)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int))(=> (and (and (and (and (and (and (and (= (* (- 1) C) 0) (not (and (>= (+ A (- 1)) 0) (or (or (not (>= (+ A (* (- 10) F)) 0)) (not (>= (+ (- (* 10 F) (+ A (- 10))) (- 1)) 0))) (not (>= (+ F (- 1)) 0)))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) G)) 0)) (not (>= (+ (- (* 10 G) (+ A (- 10))) (- 1)) 0))) (>= (+ G (- 1)) 0)) (or (or (or (or (not (>= (+ A (* (- 10) H)) 0)) (not (>= (+ (- (* 10 H) (+ A (- 10))) (- 1)) 0))) (not (>= (+ H (* (- 10) I)) 0))) (or (or (not (>= (+ A (* (- 10) J)) 0)) (not (>= (+ (- (* 10 J) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 I) (+ J (- 10))) (- 1)) 0)))) (not (>= (+ I (- 1)) 0))))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) K)) 0)) (not (>= (+ (- (* 10 K) (+ A (- 10))) (- 1)) 0))) (>= (+ K (- 1)) 0)) (and (or (or (or (or (not (>= (+ A (* (- 10) L)) 0)) (not (>= (+ (- (* 10 L) (+ A (- 10))) (- 1)) 0))) (not (>= (+ L (* (- 10) M)) 0))) (or (or (not (>= (+ A (* (- 10) N)) 0)) (not (>= (+ (- (* 10 N) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 M) (+ N (- 10))) (- 1)) 0)))) (>= (+ M (- 1)) 0)) (or (or (or (or (or (or (not (>= (+ A (* (- 10) O)) 0)) (not (>= (+ (- (* 10 O) (+ A (- 10))) (- 1)) 0))) (not (>= (+ O (* (- 10) P)) 0))) (or (or (not (>= (+ A (* (- 10) Q)) 0)) (not (>= (+ (- (* 10 Q) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 P) (+ Q (- 10))) (- 1)) 0)))) (not (>= (+ P (* (- 10) R)) 0))) (or (or (or (or (not (>= (+ A (* (- 10) S)) 0)) (not (>= (+ (- (* 10 S) (+ A (- 10))) (- 1)) 0))) (not (>= (+ S (* (- 10) T)) 0))) (or (or (not (>= (+ A (* (- 10) U)) 0)) (not (>= (+ (- (* 10 U) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 T) (+ U (- 10))) (- 1)) 0)))) (not (>= (+ (- (* 10 R) (+ T (- 10))) (- 1)) 0)))) (not (>= (+ R (- 1)) 0)))))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) V)) 0)) (not (>= (+ (- (* 10 V) (+ A (- 10))) (- 1)) 0))) (>= (+ V (- 1)) 0)) (and (or (or (or (or (not (>= (+ A (* (- 10) W)) 0)) (not (>= (+ (- (* 10 W) (+ A (- 10))) (- 1)) 0))) (not (>= (+ W (* (- 10) X)) 0))) (or (or (not (>= (+ A (* (- 10) Y)) 0)) (not (>= (+ (- (* 10 Y) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 X) (+ Y (- 10))) (- 1)) 0)))) (>= (+ X (- 1)) 0)) (or (or (or (or (or (or (not (>= (+ A (* (- 10) Z)) 0)) (not (>= (+ (- (* 10 Z) (+ A (- 10))) (- 1)) 0))) (not (>= (+ Z (* (- 10) A1)) 0))) (or (or (not (>= (+ A (* (- 10) B1)) 0)) (not (>= (+ (- (* 10 B1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 A1) (+ B1 (- 10))) (- 1)) 0)))) (not (>= (+ A1 (* (- 10) C1)) 0))) (or (or (or (or (not (>= (+ A (* (- 10) D1)) 0)) (not (>= (+ (- (* 10 D1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ D1 (* (- 10) E1)) 0))) (or (or (not (>= (+ A (* (- 10) F1)) 0)) (not (>= (+ (- (* 10 F1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 E1) (+ F1 (- 10))) (- 1)) 0)))) (not (>= (+ (- (* 10 C1) (+ E1 (- 10))) (- 1)) 0)))) (>= (+ C1 (- 1)) 0))))))) (>= (+ (- 10 D) (- 1)) 0)) (not (= G1 0))) (INV_MAIN_42 A B G1 D E H1)) (INV_MAIN_42 A B C D E E))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int))(=> (and (and (and (and (and (and (and (and (and (= (* (- 1) C) 0) (= (+ E 1) F)) (not (and (>= (+ A (- 1)) 0) (or (or (not (>= (+ A (* (- 10) G)) 0)) (not (>= (+ (- (* 10 G) (+ A (- 10))) (- 1)) 0))) (not (>= (+ G (- 1)) 0)))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) H)) 0)) (not (>= (+ (- (* 10 H) (+ A (- 10))) (- 1)) 0))) (>= (+ H (- 1)) 0)) (or (or (or (or (not (>= (+ A (* (- 10) I)) 0)) (not (>= (+ (- (* 10 I) (+ A (- 10))) (- 1)) 0))) (not (>= (+ I (* (- 10) J)) 0))) (or (or (not (>= (+ A (* (- 10) K)) 0)) (not (>= (+ (- (* 10 K) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 J) (+ K (- 10))) (- 1)) 0)))) (not (>= (+ J (- 1)) 0))))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) L)) 0)) (not (>= (+ (- (* 10 L) (+ A (- 10))) (- 1)) 0))) (>= (+ L (- 1)) 0)) (and (or (or (or (or (not (>= (+ A (* (- 10) M)) 0)) (not (>= (+ (- (* 10 M) (+ A (- 10))) (- 1)) 0))) (not (>= (+ M (* (- 10) N)) 0))) (or (or (not (>= (+ A (* (- 10) O)) 0)) (not (>= (+ (- (* 10 O) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 N) (+ O (- 10))) (- 1)) 0)))) (>= (+ N (- 1)) 0)) (or (or (or (or (or (or (not (>= (+ A (* (- 10) P)) 0)) (not (>= (+ (- (* 10 P) (+ A (- 10))) (- 1)) 0))) (not (>= (+ P (* (- 10) Q)) 0))) (or (or (not (>= (+ A (* (- 10) R)) 0)) (not (>= (+ (- (* 10 R) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 Q) (+ R (- 10))) (- 1)) 0)))) (not (>= (+ Q (* (- 10) S)) 0))) (or (or (or (or (not (>= (+ A (* (- 10) T)) 0)) (not (>= (+ (- (* 10 T) (+ A (- 10))) (- 1)) 0))) (not (>= (+ T (* (- 10) U)) 0))) (or (or (not (>= (+ A (* (- 10) V)) 0)) (not (>= (+ (- (* 10 V) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 U) (+ V (- 10))) (- 1)) 0)))) (not (>= (+ (- (* 10 S) (+ U (- 10))) (- 1)) 0)))) (not (>= (+ S (- 1)) 0)))))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) W)) 0)) (not (>= (+ (- (* 10 W) (+ A (- 10))) (- 1)) 0))) (>= (+ W (- 1)) 0)) (and (or (or (or (or (not (>= (+ A (* (- 10) X)) 0)) (not (>= (+ (- (* 10 X) (+ A (- 10))) (- 1)) 0))) (not (>= (+ X (* (- 10) Y)) 0))) (or (or (not (>= (+ A (* (- 10) Z)) 0)) (not (>= (+ (- (* 10 Z) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 Y) (+ Z (- 10))) (- 1)) 0)))) (>= (+ Y (- 1)) 0)) (or (or (or (or (or (or (not (>= (+ A (* (- 10) A1)) 0)) (not (>= (+ (- (* 10 A1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ A1 (* (- 10) B1)) 0))) (or (or (not (>= (+ A (* (- 10) C1)) 0)) (not (>= (+ (- (* 10 C1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 B1) (+ C1 (- 10))) (- 1)) 0)))) (not (>= (+ B1 (* (- 10) D1)) 0))) (or (or (or (or (not (>= (+ A (* (- 10) E1)) 0)) (not (>= (+ (- (* 10 E1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ E1 (* (- 10) F1)) 0))) (or (or (not (>= (+ A (* (- 10) G1)) 0)) (not (>= (+ (- (* 10 G1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 F1) (+ G1 (- 10))) (- 1)) 0)))) (not (>= (+ (- (* 10 D1) (+ F1 (- 10))) (- 1)) 0)))) (>= (+ D1 (- 1)) 0))))))) (>= (+ (- 100 D) (- 1)) 0)) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= H1 0))) (INV_MAIN_42 A B H1 D E I1)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int))(=> (and (and (and (and (and (and (and (and (and (and (= (* (- 1) C) 0) (= (+ E 2) F)) (not (and (>= (+ A (- 1)) 0) (or (or (not (>= (+ A (* (- 10) G)) 0)) (not (>= (+ (- (* 10 G) (+ A (- 10))) (- 1)) 0))) (not (>= (+ G (- 1)) 0)))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) H)) 0)) (not (>= (+ (- (* 10 H) (+ A (- 10))) (- 1)) 0))) (>= (+ H (- 1)) 0)) (or (or (or (or (not (>= (+ A (* (- 10) I)) 0)) (not (>= (+ (- (* 10 I) (+ A (- 10))) (- 1)) 0))) (not (>= (+ I (* (- 10) J)) 0))) (or (or (not (>= (+ A (* (- 10) K)) 0)) (not (>= (+ (- (* 10 K) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 J) (+ K (- 10))) (- 1)) 0)))) (not (>= (+ J (- 1)) 0))))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) L)) 0)) (not (>= (+ (- (* 10 L) (+ A (- 10))) (- 1)) 0))) (>= (+ L (- 1)) 0)) (and (or (or (or (or (not (>= (+ A (* (- 10) M)) 0)) (not (>= (+ (- (* 10 M) (+ A (- 10))) (- 1)) 0))) (not (>= (+ M (* (- 10) N)) 0))) (or (or (not (>= (+ A (* (- 10) O)) 0)) (not (>= (+ (- (* 10 O) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 N) (+ O (- 10))) (- 1)) 0)))) (>= (+ N (- 1)) 0)) (or (or (or (or (or (or (not (>= (+ A (* (- 10) P)) 0)) (not (>= (+ (- (* 10 P) (+ A (- 10))) (- 1)) 0))) (not (>= (+ P (* (- 10) Q)) 0))) (or (or (not (>= (+ A (* (- 10) R)) 0)) (not (>= (+ (- (* 10 R) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 Q) (+ R (- 10))) (- 1)) 0)))) (not (>= (+ Q (* (- 10) S)) 0))) (or (or (or (or (not (>= (+ A (* (- 10) T)) 0)) (not (>= (+ (- (* 10 T) (+ A (- 10))) (- 1)) 0))) (not (>= (+ T (* (- 10) U)) 0))) (or (or (not (>= (+ A (* (- 10) V)) 0)) (not (>= (+ (- (* 10 V) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 U) (+ V (- 10))) (- 1)) 0)))) (not (>= (+ (- (* 10 S) (+ U (- 10))) (- 1)) 0)))) (not (>= (+ S (- 1)) 0)))))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) W)) 0)) (not (>= (+ (- (* 10 W) (+ A (- 10))) (- 1)) 0))) (>= (+ W (- 1)) 0)) (and (or (or (or (or (not (>= (+ A (* (- 10) X)) 0)) (not (>= (+ (- (* 10 X) (+ A (- 10))) (- 1)) 0))) (not (>= (+ X (* (- 10) Y)) 0))) (or (or (not (>= (+ A (* (- 10) Z)) 0)) (not (>= (+ (- (* 10 Z) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 Y) (+ Z (- 10))) (- 1)) 0)))) (>= (+ Y (- 1)) 0)) (or (or (or (or (or (or (not (>= (+ A (* (- 10) A1)) 0)) (not (>= (+ (- (* 10 A1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ A1 (* (- 10) B1)) 0))) (or (or (not (>= (+ A (* (- 10) C1)) 0)) (not (>= (+ (- (* 10 C1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 B1) (+ C1 (- 10))) (- 1)) 0)))) (not (>= (+ B1 (* (- 10) D1)) 0))) (or (or (or (or (not (>= (+ A (* (- 10) E1)) 0)) (not (>= (+ (- (* 10 E1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ E1 (* (- 10) F1)) 0))) (or (or (not (>= (+ A (* (- 10) G1)) 0)) (not (>= (+ (- (* 10 G1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 F1) (+ G1 (- 10))) (- 1)) 0)))) (not (>= (+ (- (* 10 D1) (+ F1 (- 10))) (- 1)) 0)))) (>= (+ D1 (- 1)) 0))))))) (>= (+ (- 1000 D) (- 1)) 0)) (not (>= (+ (- 100 D) (- 1)) 0))) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= H1 0))) (INV_MAIN_42 A B H1 D E I1)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (= (* (- 1) C) 0) (= (+ E 3) F)) (not (and (>= (+ A (- 1)) 0) (or (or (not (>= (+ A (* (- 10) G)) 0)) (not (>= (+ (- (* 10 G) (+ A (- 10))) (- 1)) 0))) (not (>= (+ G (- 1)) 0)))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) H)) 0)) (not (>= (+ (- (* 10 H) (+ A (- 10))) (- 1)) 0))) (>= (+ H (- 1)) 0)) (or (or (or (or (not (>= (+ A (* (- 10) I)) 0)) (not (>= (+ (- (* 10 I) (+ A (- 10))) (- 1)) 0))) (not (>= (+ I (* (- 10) J)) 0))) (or (or (not (>= (+ A (* (- 10) K)) 0)) (not (>= (+ (- (* 10 K) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 J) (+ K (- 10))) (- 1)) 0)))) (not (>= (+ J (- 1)) 0))))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) L)) 0)) (not (>= (+ (- (* 10 L) (+ A (- 10))) (- 1)) 0))) (>= (+ L (- 1)) 0)) (and (or (or (or (or (not (>= (+ A (* (- 10) M)) 0)) (not (>= (+ (- (* 10 M) (+ A (- 10))) (- 1)) 0))) (not (>= (+ M (* (- 10) N)) 0))) (or (or (not (>= (+ A (* (- 10) O)) 0)) (not (>= (+ (- (* 10 O) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 N) (+ O (- 10))) (- 1)) 0)))) (>= (+ N (- 1)) 0)) (or (or (or (or (or (or (not (>= (+ A (* (- 10) P)) 0)) (not (>= (+ (- (* 10 P) (+ A (- 10))) (- 1)) 0))) (not (>= (+ P (* (- 10) Q)) 0))) (or (or (not (>= (+ A (* (- 10) R)) 0)) (not (>= (+ (- (* 10 R) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 Q) (+ R (- 10))) (- 1)) 0)))) (not (>= (+ Q (* (- 10) S)) 0))) (or (or (or (or (not (>= (+ A (* (- 10) T)) 0)) (not (>= (+ (- (* 10 T) (+ A (- 10))) (- 1)) 0))) (not (>= (+ T (* (- 10) U)) 0))) (or (or (not (>= (+ A (* (- 10) V)) 0)) (not (>= (+ (- (* 10 V) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 U) (+ V (- 10))) (- 1)) 0)))) (not (>= (+ (- (* 10 S) (+ U (- 10))) (- 1)) 0)))) (not (>= (+ S (- 1)) 0)))))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) W)) 0)) (not (>= (+ (- (* 10 W) (+ A (- 10))) (- 1)) 0))) (>= (+ W (- 1)) 0)) (and (or (or (or (or (not (>= (+ A (* (- 10) X)) 0)) (not (>= (+ (- (* 10 X) (+ A (- 10))) (- 1)) 0))) (not (>= (+ X (* (- 10) Y)) 0))) (or (or (not (>= (+ A (* (- 10) Z)) 0)) (not (>= (+ (- (* 10 Z) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 Y) (+ Z (- 10))) (- 1)) 0)))) (>= (+ Y (- 1)) 0)) (or (or (or (or (or (or (not (>= (+ A (* (- 10) A1)) 0)) (not (>= (+ (- (* 10 A1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ A1 (* (- 10) B1)) 0))) (or (or (not (>= (+ A (* (- 10) C1)) 0)) (not (>= (+ (- (* 10 C1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 B1) (+ C1 (- 10))) (- 1)) 0)))) (not (>= (+ B1 (* (- 10) D1)) 0))) (or (or (or (or (not (>= (+ A (* (- 10) E1)) 0)) (not (>= (+ (- (* 10 E1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ E1 (* (- 10) F1)) 0))) (or (or (not (>= (+ A (* (- 10) G1)) 0)) (not (>= (+ (- (* 10 G1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 F1) (+ G1 (- 10))) (- 1)) 0)))) (not (>= (+ (- (* 10 D1) (+ F1 (- 10))) (- 1)) 0)))) (>= (+ D1 (- 1)) 0))))))) (>= (+ (- 10000 D) (- 1)) 0)) (not (>= (+ (- 1000 D) (- 1)) 0))) (not (>= (+ (- 100 D) (- 1)) 0))) (not (>= (+ (- 10 D) (- 1)) 0))) (not (= H1 0))) (INV_MAIN_42 A B H1 D E I1)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int))(=> (and (and (and (and (and (and (and (and (and (and (and (and (= (+ G 4) E) (>= (+ (- (* 10000 D) (+ H (- 10000))) (- 1)) 0)) (>= (+ H (* (- 10000) D)) 0)) (not (and (>= (+ A (- 1)) 0) (or (or (not (>= (+ A (* (- 10) I)) 0)) (not (>= (+ (- (* 10 I) (+ A (- 10))) (- 1)) 0))) (not (>= (+ I (- 1)) 0)))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) J)) 0)) (not (>= (+ (- (* 10 J) (+ A (- 10))) (- 1)) 0))) (>= (+ J (- 1)) 0)) (or (or (or (or (not (>= (+ A (* (- 10) K)) 0)) (not (>= (+ (- (* 10 K) (+ A (- 10))) (- 1)) 0))) (not (>= (+ K (* (- 10) L)) 0))) (or (or (not (>= (+ A (* (- 10) M)) 0)) (not (>= (+ (- (* 10 M) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 L) (+ M (- 10))) (- 1)) 0)))) (not (>= (+ L (- 1)) 0))))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) N)) 0)) (not (>= (+ (- (* 10 N) (+ A (- 10))) (- 1)) 0))) (>= (+ N (- 1)) 0)) (and (or (or (or (or (not (>= (+ A (* (- 10) O)) 0)) (not (>= (+ (- (* 10 O) (+ A (- 10))) (- 1)) 0))) (not (>= (+ O (* (- 10) P)) 0))) (or (or (not (>= (+ A (* (- 10) Q)) 0)) (not (>= (+ (- (* 10 Q) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 P) (+ Q (- 10))) (- 1)) 0)))) (>= (+ P (- 1)) 0)) (or (or (or (or (or (or (not (>= (+ A (* (- 10) R)) 0)) (not (>= (+ (- (* 10 R) (+ A (- 10))) (- 1)) 0))) (not (>= (+ R (* (- 10) S)) 0))) (or (or (not (>= (+ A (* (- 10) T)) 0)) (not (>= (+ (- (* 10 T) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 S) (+ T (- 10))) (- 1)) 0)))) (not (>= (+ S (* (- 10) U)) 0))) (or (or (or (or (not (>= (+ A (* (- 10) V)) 0)) (not (>= (+ (- (* 10 V) (+ A (- 10))) (- 1)) 0))) (not (>= (+ V (* (- 10) W)) 0))) (or (or (not (>= (+ A (* (- 10) X)) 0)) (not (>= (+ (- (* 10 X) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 W) (+ X (- 10))) (- 1)) 0)))) (not (>= (+ (- (* 10 U) (+ W (- 10))) (- 1)) 0)))) (not (>= (+ U (- 1)) 0)))))))) (not (and (>= (+ A (- 1)) 0) (and (or (or (not (>= (+ A (* (- 10) Y)) 0)) (not (>= (+ (- (* 10 Y) (+ A (- 10))) (- 1)) 0))) (>= (+ Y (- 1)) 0)) (and (or (or (or (or (not (>= (+ A (* (- 10) Z)) 0)) (not (>= (+ (- (* 10 Z) (+ A (- 10))) (- 1)) 0))) (not (>= (+ Z (* (- 10) A1)) 0))) (or (or (not (>= (+ A (* (- 10) B1)) 0)) (not (>= (+ (- (* 10 B1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 A1) (+ B1 (- 10))) (- 1)) 0)))) (>= (+ A1 (- 1)) 0)) (or (or (or (or (or (or (not (>= (+ A (* (- 10) C1)) 0)) (not (>= (+ (- (* 10 C1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ C1 (* (- 10) D1)) 0))) (or (or (not (>= (+ A (* (- 10) E1)) 0)) (not (>= (+ (- (* 10 E1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 D1) (+ E1 (- 10))) (- 1)) 0)))) (not (>= (+ D1 (* (- 10) F1)) 0))) (or (or (or (or (not (>= (+ A (* (- 10) G1)) 0)) (not (>= (+ (- (* 10 G1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ G1 (* (- 10) H1)) 0))) (or (or (not (>= (+ A (* (- 10) I1)) 0)) (not (>= (+ (- (* 10 I1) (+ A (- 10))) (- 1)) 0))) (not (>= (+ (- (* 10 H1) (+ I1 (- 10))) (- 1)) 0)))) (not (>= (+ (- (* 10 F1) (+ H1 (- 10))) (- 1)) 0)))) (>= (+ F1 (- 1)) 0))))))) (not (>= (+ (- 10000 H) (- 1)) 0))) (not (>= (+ (- 1000 H) (- 1)) 0))) (not (>= (+ (- 100 H) (- 1)) 0))) (not (>= (+ (- 10 H) (- 1)) 0))) (not (= C 0))) (INV_MAIN_42 A B C H G F)) (INV_MAIN_42 A B C D E F))))
(check-sat)
