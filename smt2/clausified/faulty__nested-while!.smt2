(set-info :origin "Horn problem converted to SMT-LIB2 using Eldarica (https://github.com/uuverifiers/eldarica)")
(set-logic HORN)
(declare-fun INV_MAIN_42 (Int Int Int Int Int Int) Bool)
(declare-fun INV_MAIN_23 (Int Int Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))(=> (and (and (and (= (* (- 1) B) 0) (= (* (- 1) E) 0)) (= A D)) (= C F)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int))(=> (and (and (and (and (and (and (= (+ G 1) B) (= (+ (+ H 2) (- 1)) C)) (= (+ I 2) E)) (= (+ J 1) F)) (>= (+ (- D J) (- 1)) 0)) (>= (+ (- A H) (- 1)) 0)) (INV_MAIN_23 A G H D I J)) (INV_MAIN_23 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))(=> (and (and (and (and (= (+ G 1) B) (= (+ (+ H 2) (- 1)) C)) (not (>= (+ (- D F) (- 1)) 0))) (>= (+ (- A H) (- 1)) 0)) (INV_MAIN_23 A G H D E F)) (INV_MAIN_23 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))(=> (and (and (and (and (= (+ G 2) E) (= (+ H 1) F)) (not (>= (+ (- A C) (- 1)) 0))) (>= (+ (- D H) (- 1)) 0)) (INV_MAIN_23 A B C D G H)) (INV_MAIN_23 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int))(=> (and (and (and (= (+ G 1) A) (not (>= (+ (- E F) (- 1)) 0))) (not (>= (+ (- B C) (- 1)) 0))) (INV_MAIN_23 B G C E D F)) (INV_MAIN_42 A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) (not (and (and (>= (+ (- A B) (- 1)) 0) (not (>= (+ (- C D) (- 1)) 0))) (INV_MAIN_42 E D C F B A)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) (not (and (and (not (>= (+ (- A B) (- 1)) 0)) (>= (+ (- C D) (- 1)) 0)) (INV_MAIN_42 E D C F B A)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) (not (and (and (and (not (= A B)) (not (>= (+ (- C D) (- 1)) 0))) (not (>= (+ (- E F) (- 1)) 0))) (INV_MAIN_42 A F E B D C)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int))(=> (and (and (and (and (and (and (= (+ G 1) A) (= (+ H (- 2)) B)) (= (+ I 1) D)) (= (+ J (- 2)) E)) (>= (+ (- F I) (- 1)) 0)) (>= (+ (- C G) (- 1)) 0)) (INV_MAIN_42 H G C J I F)) (INV_MAIN_23 A B C D E F))))
(check-sat)
