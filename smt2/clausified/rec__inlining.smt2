(set-info :origin "Horn problem converted to SMT-LIB2 using Eldarica (https://github.com/uuverifiers/eldarica)")
(set-logic HORN)
(declare-fun INV_REC_f^f (Int Int Int Int) Bool)
(declare-fun INV_REC_f^f_PRE (Int Int) Bool)
(declare-fun INV_REC_f__1 (Int Int) Bool)
(declare-fun INV_REC_f__1_PRE (Int) Bool)
(declare-fun INV_REC_f__2 (Int Int) Bool)
(declare-fun INV_REC_f__2_PRE (Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) (not (and (and (and (and (and (and (and (and (not (= (* (- 1) (+ A 2)) 0)) (not (<= (+ A 2) (- 1)))) (<= (+ B 1) (- 1))) (= (+ C (- 1)) D)) (= (+ E (- 2)) F)) (INV_REC_f^f D F B A)) (>= (+ (+ E (- 1)) (- 1)) 0)) (>= (+ C (- 1)) 0)) (= C E)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) (not (and (and (and (and (and (and (and (and (not (= (+ A 1) (+ B 2))) (not (<= (+ B 2) (- 1)))) (not (<= (+ A 1) (- 1)))) (= (+ C (- 1)) D)) (= (+ E (- 2)) F)) (INV_REC_f^f D F A B)) (>= (+ (+ E (- 1)) (- 1)) 0)) (>= (+ C (- 1)) 0)) (= C E)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) (not (and (and (and (and (and (and (and (and (not (= (+ A 1) 0)) (<= (+ B 2) (- 1))) (not (<= (+ A 1) (- 1)))) (= (+ C (- 1)) D)) (= (+ E (- 2)) F)) (INV_REC_f^f D F A B)) (>= (+ (+ E (- 1)) (- 1)) 0)) (>= (+ C (- 1)) 0)) (= C E)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int))(=> (and (and (and (and (= (+ C (- 1)) A) (= (+ D (- 2)) B)) (>= (+ (+ D (- 1)) (- 1)) 0)) (>= (+ C (- 1)) 0)) (= C D)) (INV_REC_f^f_PRE A B))))
(assert (forall ((A Int) (B Int) (C Int) (D Int)) (not (and (and (and (and (and (and (and (not (= (* (- 1) A) 0)) (not (<= A (- 1)))) (<= (+ B 1) (- 1))) (= (+ C (- 1)) D)) (INV_REC_f__1 D B)) (not (>= (+ (+ A (- 1)) (- 1)) 0))) (>= (+ C (- 1)) 0)) (= C A)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int)) (not (and (and (and (and (and (and (and (not (= (+ A 1) B)) (not (<= B (- 1)))) (not (<= (+ A 1) (- 1)))) (= (+ C (- 1)) D)) (INV_REC_f__1 D A)) (not (>= (+ (+ B (- 1)) (- 1)) 0))) (>= (+ C (- 1)) 0)) (= C B)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int)) (not (and (and (and (and (and (and (and (not (= (+ A 1) 0)) (<= B (- 1))) (not (<= (+ A 1) (- 1)))) (= (+ C (- 1)) D)) (INV_REC_f__1 D A)) (not (>= (+ (+ B (- 1)) (- 1)) 0))) (>= (+ C (- 1)) 0)) (= C B)))))
(assert (forall ((A Int) (B Int) (C Int))(=> (and (and (and (= (+ B (- 1)) A) (not (>= (+ (+ C (- 1)) (- 1)) 0))) (>= (+ B (- 1)) 0)) (= B C)) (INV_REC_f__1_PRE A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int)) (not (and (and (and (and (and (and (and (not (= (* (- 1) (+ A 2)) 0)) (not (<= (+ A 2) (- 1)))) (<= B (- 1))) (= (+ C (- 2)) D)) (INV_REC_f__2 D A)) (>= (+ (+ C (- 1)) (- 1)) 0)) (not (>= (+ B (- 1)) 0))) (= B C)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int)) (not (and (and (and (and (and (and (and (not (= A (+ B 2))) (not (<= (+ B 2) (- 1)))) (not (<= A (- 1)))) (= (+ C (- 2)) D)) (INV_REC_f__2 D B)) (>= (+ (+ C (- 1)) (- 1)) 0)) (not (>= (+ A (- 1)) 0))) (= A C)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int)) (not (and (and (and (and (and (and (and (not (= A 0)) (<= (+ B 2) (- 1))) (not (<= A (- 1)))) (= (+ C (- 2)) D)) (INV_REC_f__2 D B)) (>= (+ (+ C (- 1)) (- 1)) 0)) (not (>= (+ A (- 1)) 0))) (= A C)))))
(assert (forall ((A Int) (B Int) (C Int))(=> (and (and (and (= (+ B (- 2)) A) (>= (+ (+ B (- 1)) (- 1)) 0)) (not (>= (+ C (- 1)) 0))) (= C B)) (INV_REC_f__2_PRE A))))
(assert (forall ((A Int) (B Int)) (not (and (and (and (not (and (or (not (<= A (- 1))) (or (<= B (- 1)) (= (* (- 1) B) 0))) (or (<= A (- 1)) (and (or (not (<= B (- 1))) (= A 0)) (or (<= B (- 1)) (= A B)))))) (not (>= (+ (+ B (- 1)) (- 1)) 0))) (not (>= (+ A (- 1)) 0))) (= A B)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))(=> (and (and (and (and (and (and (and (and (and (= (* (- 1) C) 0) (= (+ E 2) D)) (not (<= (+ E 2) (- 1)))) (<= (+ F 1) (- 1))) (= (+ A (- 1)) G)) (= (+ B (- 2)) H)) (INV_REC_f^f G H F E)) (>= (+ (+ B (- 1)) (- 1)) 0)) (>= (+ A (- 1)) 0)) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B C D))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))(=> (and (and (and (and (and (and (and (and (and (= (* (- 1) C) 0) (= (* (- 1) D) 0)) (<= (+ E 2) (- 1))) (<= (+ F 1) (- 1))) (= (+ A (- 1)) G)) (= (+ B (- 2)) H)) (INV_REC_f^f G H F E)) (>= (+ (+ B (- 1)) (- 1)) 0)) (>= (+ A (- 1)) 0)) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B C D))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))(=> (and (and (and (and (and (and (and (and (and (= (+ E 1) C) (= (+ F 2) D)) (not (<= (+ F 2) (- 1)))) (not (<= (+ E 1) (- 1)))) (= (+ A (- 1)) G)) (= (+ B (- 2)) H)) (INV_REC_f^f G H E F)) (>= (+ (+ B (- 1)) (- 1)) 0)) (>= (+ A (- 1)) 0)) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B C D))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))(=> (and (and (and (and (and (and (and (and (and (= (+ E 1) C) (= (* (- 1) D) 0)) (<= (+ F 2) (- 1))) (not (<= (+ E 1) (- 1)))) (= (+ A (- 1)) G)) (= (+ B (- 2)) H)) (INV_REC_f^f G H E F)) (>= (+ (+ B (- 1)) (- 1)) 0)) (>= (+ A (- 1)) 0)) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B C D))))
(assert (forall ((A Int) (B Int) (C Int) (D Int))(=> (and (and (and (and (= (+ C (- 1)) A) (= (+ D (- 2)) B)) (>= (+ (+ D (- 1)) (- 1)) 0)) (>= (+ C (- 1)) 0)) (INV_REC_f^f_PRE C D)) (INV_REC_f^f_PRE A B))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int))(=> (and (and (and (and (and (and (and (= (* (- 1) C) 0) (not (<= B (- 1)))) (<= (+ D 1) (- 1))) (= (+ A (- 1)) E)) (INV_REC_f__1 E D)) (not (>= (+ (+ B (- 1)) (- 1)) 0))) (>= (+ A (- 1)) 0)) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B C B))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))(=> (and (and (and (and (and (and (and (and (= (* (- 1) C) 0) (= (* (- 1) D) 0)) (<= B (- 1))) (<= (+ E 1) (- 1))) (= (+ A (- 1)) F)) (INV_REC_f__1 F E)) (not (>= (+ (+ B (- 1)) (- 1)) 0))) (>= (+ A (- 1)) 0)) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B C D))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int))(=> (and (and (and (and (and (and (and (= (+ D 1) C) (not (<= B (- 1)))) (not (<= (+ D 1) (- 1)))) (= (+ A (- 1)) E)) (INV_REC_f__1 E D)) (not (>= (+ (+ B (- 1)) (- 1)) 0))) (>= (+ A (- 1)) 0)) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B C B))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))(=> (and (and (and (and (and (and (and (and (= (+ E 1) C) (= (* (- 1) D) 0)) (<= B (- 1))) (not (<= (+ E 1) (- 1)))) (= (+ A (- 1)) F)) (INV_REC_f__1 F E)) (not (>= (+ (+ B (- 1)) (- 1)) 0))) (>= (+ A (- 1)) 0)) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B C D))))
(assert (forall ((A Int) (B Int) (C Int))(=> (and (and (and (= (+ B (- 1)) A) (not (>= (+ (+ C (- 1)) (- 1)) 0))) (>= (+ B (- 1)) 0)) (INV_REC_f^f_PRE B C)) (INV_REC_f__1_PRE A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))(=> (and (and (and (and (and (and (and (and (= (* (- 1) C) 0) (= (+ E 2) D)) (not (<= (+ E 2) (- 1)))) (<= A (- 1))) (= (+ B (- 2)) F)) (INV_REC_f__2 F E)) (>= (+ (+ B (- 1)) (- 1)) 0)) (not (>= (+ A (- 1)) 0))) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B C D))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))(=> (and (and (and (and (and (and (and (and (= (* (- 1) C) 0) (= (* (- 1) D) 0)) (<= (+ E 2) (- 1))) (<= A (- 1))) (= (+ B (- 2)) F)) (INV_REC_f__2 F E)) (>= (+ (+ B (- 1)) (- 1)) 0)) (not (>= (+ A (- 1)) 0))) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B C D))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int))(=> (and (and (and (and (and (and (and (= (+ D 2) C) (not (<= (+ D 2) (- 1)))) (not (<= A (- 1)))) (= (+ B (- 2)) E)) (INV_REC_f__2 E D)) (>= (+ (+ B (- 1)) (- 1)) 0)) (not (>= (+ A (- 1)) 0))) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B A C))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int))(=> (and (and (and (and (and (and (and (= (* (- 1) C) 0) (<= (+ D 2) (- 1))) (not (<= A (- 1)))) (= (+ B (- 2)) E)) (INV_REC_f__2 E D)) (>= (+ (+ B (- 1)) (- 1)) 0)) (not (>= (+ A (- 1)) 0))) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B A C))))
(assert (forall ((A Int) (B Int) (C Int))(=> (and (and (and (= (+ B (- 2)) A) (>= (+ (+ B (- 1)) (- 1)) 0)) (not (>= (+ C (- 1)) 0))) (INV_REC_f^f_PRE C B)) (INV_REC_f__2_PRE A))))
(assert (forall ((A Int) (B Int) (C Int))(=> (and (and (and (and (and (= (* (- 1) C) 0) (<= B (- 1))) (not (<= A (- 1)))) (not (>= (+ (+ B (- 1)) (- 1)) 0))) (not (>= (+ A (- 1)) 0))) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B A C))))
(assert (forall ((A Int) (B Int))(=> (and (and (and (and (not (<= B (- 1))) (not (<= A (- 1)))) (not (>= (+ (+ B (- 1)) (- 1)) 0))) (not (>= (+ A (- 1)) 0))) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B A B))))
(assert (forall ((A Int) (B Int) (C Int) (D Int))(=> (and (and (and (and (and (and (= (* (- 1) C) 0) (= (* (- 1) D) 0)) (<= B (- 1))) (<= A (- 1))) (not (>= (+ (+ B (- 1)) (- 1)) 0))) (not (>= (+ A (- 1)) 0))) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B C D))))
(assert (forall ((A Int) (B Int) (C Int))(=> (and (and (and (and (and (= (* (- 1) C) 0) (not (<= B (- 1)))) (<= A (- 1))) (not (>= (+ (+ B (- 1)) (- 1)) 0))) (not (>= (+ A (- 1)) 0))) (INV_REC_f^f_PRE A B)) (INV_REC_f^f A B C B))))
(assert (forall ((A Int) (B Int))(=> (and (and (= (+ B (- 1)) A) (>= (+ B (- 1)) 0)) (INV_REC_f__1_PRE B)) (INV_REC_f__1_PRE A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int))(=> (and (and (and (and (and (= (+ C 1) B) (not (<= (+ C 1) (- 1)))) (= (+ A (- 1)) D)) (INV_REC_f__1 D C)) (>= (+ A (- 1)) 0)) (INV_REC_f__1_PRE A)) (INV_REC_f__1 A B))))
(assert (forall ((A Int) (B Int) (C Int) (D Int))(=> (and (and (and (and (and (= (* (- 1) B) 0) (<= (+ C 1) (- 1))) (= (+ A (- 1)) D)) (INV_REC_f__1 D C)) (>= (+ A (- 1)) 0)) (INV_REC_f__1_PRE A)) (INV_REC_f__1 A B))))
(assert (forall ((A Int) (B Int))(=> (and (and (and (= (* (- 1) B) 0) (<= A (- 1))) (not (>= (+ A (- 1)) 0))) (INV_REC_f__1_PRE A)) (INV_REC_f__1 A B))))
(assert (forall ((A Int))(=> (and (and (not (<= A (- 1))) (not (>= (+ A (- 1)) 0))) (INV_REC_f__1_PRE A)) (INV_REC_f__1 A A))))
(assert (forall ((A Int) (B Int))(=> (and (and (= (+ B (- 2)) A) (>= (+ (+ B (- 1)) (- 1)) 0)) (INV_REC_f__2_PRE B)) (INV_REC_f__2_PRE A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int))(=> (and (and (and (and (and (= (+ C 2) B) (not (<= (+ C 2) (- 1)))) (= (+ A (- 2)) D)) (INV_REC_f__2 D C)) (>= (+ (+ A (- 1)) (- 1)) 0)) (INV_REC_f__2_PRE A)) (INV_REC_f__2 A B))))
(assert (forall ((A Int) (B Int) (C Int) (D Int))(=> (and (and (and (and (and (= (* (- 1) B) 0) (<= (+ C 2) (- 1))) (= (+ A (- 2)) D)) (INV_REC_f__2 D C)) (>= (+ (+ A (- 1)) (- 1)) 0)) (INV_REC_f__2_PRE A)) (INV_REC_f__2 A B))))
(assert (forall ((A Int) (B Int))(=> (and (and (and (= (* (- 1) B) 0) (<= A (- 1))) (not (>= (+ (+ A (- 1)) (- 1)) 0))) (INV_REC_f__2_PRE A)) (INV_REC_f__2 A B))))
(assert (forall ((A Int))(=> (and (and (not (<= A (- 1))) (not (>= (+ (+ A (- 1)) (- 1)) 0))) (INV_REC_f__2_PRE A)) (INV_REC_f__2 A A))))
(check-sat)
