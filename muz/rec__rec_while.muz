;; Produced by llreve (commit dc2abeaa50d9197d51fa4223b58154246b164df0)
;; See https://formal.iti.kit.edu/reve and https://github.com/mattulbrich/llreve/
;; (c) 2018 KIT

(set-option
   :int-real-coercions
   false)
(declare-var
   call2$1_0_1
   Int)
(declare-var
   call2$2_0_1
   Int)
(declare-var
   i.0$1_0_old_1
   Int)
(declare-var
   i.0$2_0_old_1
   Int)
(declare-var
   n$1_0_old_1
   Int)
(declare-var
   n$2_0_old_1
   Int)
(declare-var
   result$1_1
   Int)
(declare-var
   result$2_1
   Int)
(declare-var
   z$1_0_old_1
   Int)
(declare-var
   z$2_0_old_1
   Int)
(declare-rel
   END_QUERY
   ())
(define-fun
   IN_INV
   ((n$1_0 Int)
    (z$1_0 Int)
    (n$2_0 Int)
    (z$2_0 Int))
   Bool
   (and
      (= n$1_0 n$2_0)
      (= z$1_0 z$2_0)))
(define-fun
   OUT_INV
   ((result$1 Int)
    (result$2 Int))
   Bool
   (= result$1 result$2))
; :annot (INV_MAIN_42 i.0$1_0 n$1_0 i.0$2_0 n$2_0)
(declare-rel
   INV_MAIN_42
   (Int
    Int
    Int
    Int))
(declare-rel
   INV_REC_f^f
   (Int
    Int
    Int
    Int
    Int
    Int))
(declare-rel
   INV_REC_f^f_PRE
   (Int
    Int
    Int
    Int))
(declare-rel
   INV_42
   (Int
    Int
    Int
    Int
    Int
    Int))
(declare-rel
   INV_42_PRE
   (Int
    Int
    Int
    Int))
(declare-rel
   INV_REC_f__1
   (Int
    Int
    Int))
(declare-rel
   INV_REC_f__1_PRE
   (Int
    Int))
(declare-rel
   INV_42__1
   (Int
    Int
    Int))
(declare-rel
   INV_42__1_PRE
   (Int
    Int))
(declare-rel
   INV_REC_f__2
   (Int
    Int
    Int))
(declare-rel
   INV_REC_f__2_PRE
   (Int
    Int))
(declare-rel
   INV_42__2
   (Int
    Int
    Int))
(declare-rel
   INV_42__2_PRE
   (Int
    Int))
(rule
   (let
      ((n$1_0_1 n$1_0_old_1))
      (let
         ((z$1_0_1 z$1_0_old_1)
          (cmp$1_0_1 (<= n$1_0_1 0)))
         (let
            ((r.0$1_0_1 n$1_0_1))
            (let
               ((result$1_1 r.0$1_0_1)
                (n$2_0_1 n$2_0_old_1))
               (let
                  ((z$2_0_1 z$2_0_old_1)
                   (cmp$2_0_1 (<= n$2_0_1 0)))
                  (=>
                     (and
                        (IN_INV n$1_0_old_1 z$1_0_old_1 n$2_0_old_1 z$2_0_old_1)
                        cmp$1_0_1
                        (not cmp$2_0_1))
                     END_QUERY)))))))
(rule
   (let
      ((n$1_0_1 n$1_0_old_1))
      (let
         ((z$1_0_1 z$1_0_old_1)
          (cmp$1_0_1 (<= n$1_0_1 0)))
         (let
            ((i.0$1_0_1 0)
             (n$2_0_1 n$2_0_old_1))
            (let
               ((z$2_0_1 z$2_0_old_1)
                (cmp$2_0_1 (<= n$2_0_1 0)))
               (=>
                  (and
                     (IN_INV n$1_0_old_1 z$1_0_old_1 n$2_0_old_1 z$2_0_old_1)
                     (not cmp$1_0_1)
                     cmp$2_0_1)
                  END_QUERY))))))
(rule
   (let
      ((n$1_0_1 n$1_0_old_1))
      (let
         ((z$1_0_1 z$1_0_old_1)
          (cmp$1_0_1 (<= n$1_0_1 0)))
         (let
            ((r.0$1_0_1 n$1_0_1))
            (let
               ((result$1_1 r.0$1_0_1)
                (n$2_0_1 n$2_0_old_1))
               (let
                  ((z$2_0_1 z$2_0_old_1)
                   (cmp$2_0_1 (<= n$2_0_1 0)))
                  (let
                     ((r.0$2_0_1 n$2_0_1))
                     (let
                        ((result$2_1 r.0$2_0_1))
                        (=>
                           (and
                              (IN_INV n$1_0_old_1 z$1_0_old_1 n$2_0_old_1 z$2_0_old_1)
                              cmp$1_0_1
                              cmp$2_0_1
                              (not (OUT_INV result$1_1 result$2_1)))
                           END_QUERY)))))))))
(rule
   (let
      ((n$1_0_1 n$1_0_old_1))
      (let
         ((z$1_0_1 z$1_0_old_1)
          (cmp$1_0_1 (<= n$1_0_1 0)))
         (let
            ((i.0$1_0_1 0)
             (n$2_0_1 n$2_0_old_1))
            (let
               ((z$2_0_1 z$2_0_old_1)
                (cmp$2_0_1 (<= n$2_0_1 0)))
               (let
                  ((i.0$2_0_1 0))
                  (=>
                     (and
                        (IN_INV n$1_0_old_1 z$1_0_old_1 n$2_0_old_1 z$2_0_old_1)
                        (not cmp$1_0_1)
                        (not cmp$2_0_1))
                     (INV_MAIN_42 i.0$1_0_1 n$1_0_1 i.0$2_0_1 n$2_0_1))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((i.0$2_0_1 i.0$2_0_old_1)
                (n$2_0_1 n$2_0_old_1))
               (let
                  ((sub$2_0_1 (- n$2_0_1 1)))
                  (let
                     ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                     (let
                        ((add$2_0_1 (+ i.0$2_0_1 1)))
                        (let
                           ((i.0$2_0_2 add$2_0_1))
                           (=>
                              (and
                                 (INV_MAIN_42 i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                                 (not cmp1$1_0_1)
                                 cmp1$2_0_1)
                              (INV_REC_f__1_PRE i.0$1_0_1 0)))))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((i.0$2_0_1 i.0$2_0_old_1)
                (n$2_0_1 n$2_0_old_1))
               (let
                  ((sub$2_0_1 (- n$2_0_1 1)))
                  (let
                     ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                     (let
                        ((add$2_0_1 (+ i.0$2_0_1 1)))
                        (let
                           ((i.0$2_0_2 add$2_0_1))
                           (=>
                              (and
                                 (INV_MAIN_42 i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                                 (not cmp1$1_0_1)
                                 cmp1$2_0_1
                                 (INV_REC_f__1 i.0$1_0_1 0 call2$1_0_1))
                              END_QUERY))))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((add$1_0_1 (+ i.0$1_0_1 1)))
               (let
                  ((i.0$1_0_2 add$1_0_1)
                   (i.0$2_0_1 i.0$2_0_old_1)
                   (n$2_0_1 n$2_0_old_1))
                  (let
                     ((sub$2_0_1 (- n$2_0_1 1)))
                     (let
                        ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                        (=>
                           (and
                              (INV_MAIN_42 i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                              cmp1$1_0_1
                              (not cmp1$2_0_1))
                           (INV_REC_f__2_PRE i.0$2_0_1 0))))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((add$1_0_1 (+ i.0$1_0_1 1)))
               (let
                  ((i.0$1_0_2 add$1_0_1)
                   (i.0$2_0_1 i.0$2_0_old_1)
                   (n$2_0_1 n$2_0_old_1))
                  (let
                     ((sub$2_0_1 (- n$2_0_1 1)))
                     (let
                        ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                        (=>
                           (and
                              (INV_MAIN_42 i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                              cmp1$1_0_1
                              (not cmp1$2_0_1)
                              (INV_REC_f__2 i.0$2_0_1 0 call2$2_0_1))
                           END_QUERY)))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((i.0$2_0_1 i.0$2_0_old_1)
                (n$2_0_1 n$2_0_old_1))
               (let
                  ((sub$2_0_1 (- n$2_0_1 1)))
                  (let
                     ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                     (=>
                        (and
                           (INV_MAIN_42 i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                           (not cmp1$1_0_1)
                           (not cmp1$2_0_1))
                        (INV_REC_f^f_PRE i.0$1_0_1 0 i.0$2_0_1 0)))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((i.0$2_0_1 i.0$2_0_old_1)
                (n$2_0_1 n$2_0_old_1))
               (let
                  ((sub$2_0_1 (- n$2_0_1 1)))
                  (let
                     ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                     (let
                        ((r.0$1_0_1 call2$1_0_1))
                        (let
                           ((result$1_1 r.0$1_0_1)
                            (r.0$2_0_1 call2$2_0_1))
                           (let
                              ((result$2_1 r.0$2_0_1))
                              (=>
                                 (and
                                    (INV_MAIN_42 i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                                    (not cmp1$1_0_1)
                                    (not cmp1$2_0_1)
                                    (INV_REC_f^f i.0$1_0_1 0 i.0$2_0_1 0 call2$1_0_1 call2$2_0_1)
                                    (not (OUT_INV result$1_1 result$2_1)))
                                 END_QUERY)))))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((add$1_0_1 (+ i.0$1_0_1 1)))
               (let
                  ((i.0$1_0_2 add$1_0_1)
                   (i.0$2_0_1 i.0$2_0_old_1)
                   (n$2_0_1 n$2_0_old_1))
                  (let
                     ((sub$2_0_1 (- n$2_0_1 1)))
                     (let
                        ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                        (let
                           ((add$2_0_1 (+ i.0$2_0_1 1)))
                           (let
                              ((i.0$2_0_2 add$2_0_1))
                              (=>
                                 (and
                                    (INV_MAIN_42 i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                                    cmp1$1_0_1
                                    cmp1$2_0_1)
                                 (INV_MAIN_42 i.0$1_0_2 n$1_0_1 i.0$2_0_2 n$2_0_1))))))))))))
(rule
   (let
      ((n$1_0_1 n$1_0_old_1))
      (let
         ((z$1_0_1 z$1_0_old_1)
          (cmp$1_0_1 (<= n$1_0_1 0)))
         (let
            ((r.0$1_0_1 n$1_0_1))
            (let
               ((result$1_1 r.0$1_0_1)
                (n$2_0_1 n$2_0_old_1))
               (let
                  ((z$2_0_1 z$2_0_old_1)
                   (cmp$2_0_1 (<= n$2_0_1 0)))
                  (=>
                     (and
                        (INV_REC_f^f_PRE n$1_0_old_1 z$1_0_old_1 n$2_0_old_1 z$2_0_old_1)
                        cmp$1_0_1
                        (not cmp$2_0_1))
                     END_QUERY)))))))
(rule
   (let
      ((n$1_0_1 n$1_0_old_1))
      (let
         ((z$1_0_1 z$1_0_old_1)
          (cmp$1_0_1 (<= n$1_0_1 0)))
         (let
            ((i.0$1_0_1 0)
             (n$2_0_1 n$2_0_old_1))
            (let
               ((z$2_0_1 z$2_0_old_1)
                (cmp$2_0_1 (<= n$2_0_1 0)))
               (=>
                  (and
                     (INV_REC_f^f_PRE n$1_0_old_1 z$1_0_old_1 n$2_0_old_1 z$2_0_old_1)
                     (not cmp$1_0_1)
                     cmp$2_0_1)
                  END_QUERY))))))
(rule
   (let
      ((n$1_0_1 n$1_0_old_1))
      (let
         ((z$1_0_1 z$1_0_old_1)
          (cmp$1_0_1 (<= n$1_0_1 0)))
         (let
            ((r.0$1_0_1 n$1_0_1))
            (let
               ((result$1_1 r.0$1_0_1)
                (n$2_0_1 n$2_0_old_1))
               (let
                  ((z$2_0_1 z$2_0_old_1)
                   (cmp$2_0_1 (<= n$2_0_1 0)))
                  (let
                     ((r.0$2_0_1 n$2_0_1))
                     (let
                        ((result$2_1 r.0$2_0_1))
                        (=>
                           (and
                              (INV_REC_f^f_PRE n$1_0_old_1 z$1_0_old_1 n$2_0_old_1 z$2_0_old_1)
                              cmp$1_0_1
                              cmp$2_0_1)
                           (INV_REC_f^f n$1_0_old_1 z$1_0_old_1 n$2_0_old_1 z$2_0_old_1 result$1_1 result$2_1))))))))))
(rule
   (let
      ((n$1_0_1 n$1_0_old_1))
      (let
         ((z$1_0_1 z$1_0_old_1)
          (cmp$1_0_1 (<= n$1_0_1 0)))
         (let
            ((i.0$1_0_1 0)
             (n$2_0_1 n$2_0_old_1))
            (let
               ((z$2_0_1 z$2_0_old_1)
                (cmp$2_0_1 (<= n$2_0_1 0)))
               (let
                  ((i.0$2_0_1 0))
                  (=>
                     (and
                        (INV_REC_f^f_PRE n$1_0_old_1 z$1_0_old_1 n$2_0_old_1 z$2_0_old_1)
                        (not cmp$1_0_1)
                        (not cmp$2_0_1))
                     (INV_42_PRE i.0$1_0_1 n$1_0_1 i.0$2_0_1 n$2_0_1))))))))
(rule
   (let
      ((n$1_0_1 n$1_0_old_1))
      (let
         ((z$1_0_1 z$1_0_old_1)
          (cmp$1_0_1 (<= n$1_0_1 0)))
         (let
            ((i.0$1_0_1 0)
             (n$2_0_1 n$2_0_old_1))
            (let
               ((z$2_0_1 z$2_0_old_1)
                (cmp$2_0_1 (<= n$2_0_1 0)))
               (let
                  ((i.0$2_0_1 0))
                  (=>
                     (and
                        (INV_REC_f^f_PRE n$1_0_old_1 z$1_0_old_1 n$2_0_old_1 z$2_0_old_1)
                        (not cmp$1_0_1)
                        (not cmp$2_0_1)
                        (INV_42 i.0$1_0_1 n$1_0_1 i.0$2_0_1 n$2_0_1 result$1_1 result$2_1))
                     (INV_REC_f^f n$1_0_old_1 z$1_0_old_1 n$2_0_old_1 z$2_0_old_1 result$1_1 result$2_1))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((i.0$2_0_1 i.0$2_0_old_1)
                (n$2_0_1 n$2_0_old_1))
               (let
                  ((sub$2_0_1 (- n$2_0_1 1)))
                  (let
                     ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                     (let
                        ((add$2_0_1 (+ i.0$2_0_1 1)))
                        (let
                           ((i.0$2_0_2 add$2_0_1))
                           (=>
                              (and
                                 (INV_42_PRE i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                                 (not cmp1$1_0_1)
                                 cmp1$2_0_1)
                              (INV_REC_f__1_PRE i.0$1_0_1 0)))))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((i.0$2_0_1 i.0$2_0_old_1)
                (n$2_0_1 n$2_0_old_1))
               (let
                  ((sub$2_0_1 (- n$2_0_1 1)))
                  (let
                     ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                     (let
                        ((add$2_0_1 (+ i.0$2_0_1 1)))
                        (let
                           ((i.0$2_0_2 add$2_0_1))
                           (=>
                              (and
                                 (INV_42_PRE i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                                 (not cmp1$1_0_1)
                                 cmp1$2_0_1
                                 (INV_REC_f__1 i.0$1_0_1 0 call2$1_0_1))
                              END_QUERY))))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((add$1_0_1 (+ i.0$1_0_1 1)))
               (let
                  ((i.0$1_0_2 add$1_0_1)
                   (i.0$2_0_1 i.0$2_0_old_1)
                   (n$2_0_1 n$2_0_old_1))
                  (let
                     ((sub$2_0_1 (- n$2_0_1 1)))
                     (let
                        ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                        (=>
                           (and
                              (INV_42_PRE i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                              cmp1$1_0_1
                              (not cmp1$2_0_1))
                           (INV_REC_f__2_PRE i.0$2_0_1 0))))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((add$1_0_1 (+ i.0$1_0_1 1)))
               (let
                  ((i.0$1_0_2 add$1_0_1)
                   (i.0$2_0_1 i.0$2_0_old_1)
                   (n$2_0_1 n$2_0_old_1))
                  (let
                     ((sub$2_0_1 (- n$2_0_1 1)))
                     (let
                        ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                        (=>
                           (and
                              (INV_42_PRE i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                              cmp1$1_0_1
                              (not cmp1$2_0_1)
                              (INV_REC_f__2 i.0$2_0_1 0 call2$2_0_1))
                           END_QUERY)))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((i.0$2_0_1 i.0$2_0_old_1)
                (n$2_0_1 n$2_0_old_1))
               (let
                  ((sub$2_0_1 (- n$2_0_1 1)))
                  (let
                     ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                     (=>
                        (and
                           (INV_42_PRE i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                           (not cmp1$1_0_1)
                           (not cmp1$2_0_1))
                        (INV_REC_f^f_PRE i.0$1_0_1 0 i.0$2_0_1 0)))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((i.0$2_0_1 i.0$2_0_old_1)
                (n$2_0_1 n$2_0_old_1))
               (let
                  ((sub$2_0_1 (- n$2_0_1 1)))
                  (let
                     ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                     (let
                        ((r.0$1_0_1 call2$1_0_1))
                        (let
                           ((result$1_1 r.0$1_0_1)
                            (r.0$2_0_1 call2$2_0_1))
                           (let
                              ((result$2_1 r.0$2_0_1))
                              (=>
                                 (and
                                    (INV_42_PRE i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                                    (not cmp1$1_0_1)
                                    (not cmp1$2_0_1)
                                    (INV_REC_f^f i.0$1_0_1 0 i.0$2_0_1 0 call2$1_0_1 call2$2_0_1))
                                 (INV_42 i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1 result$1_1 result$2_1))))))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((add$1_0_1 (+ i.0$1_0_1 1)))
               (let
                  ((i.0$1_0_2 add$1_0_1)
                   (i.0$2_0_1 i.0$2_0_old_1)
                   (n$2_0_1 n$2_0_old_1))
                  (let
                     ((sub$2_0_1 (- n$2_0_1 1)))
                     (let
                        ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                        (let
                           ((add$2_0_1 (+ i.0$2_0_1 1)))
                           (let
                              ((i.0$2_0_2 add$2_0_1))
                              (=>
                                 (and
                                    (INV_42_PRE i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                                    cmp1$1_0_1
                                    cmp1$2_0_1)
                                 (INV_42_PRE i.0$1_0_2 n$1_0_1 i.0$2_0_2 n$2_0_1))))))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((add$1_0_1 (+ i.0$1_0_1 1)))
               (let
                  ((i.0$1_0_2 add$1_0_1)
                   (i.0$2_0_1 i.0$2_0_old_1)
                   (n$2_0_1 n$2_0_old_1))
                  (let
                     ((sub$2_0_1 (- n$2_0_1 1)))
                     (let
                        ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
                        (let
                           ((add$2_0_1 (+ i.0$2_0_1 1)))
                           (let
                              ((i.0$2_0_2 add$2_0_1))
                              (=>
                                 (and
                                    (INV_42_PRE i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1)
                                    cmp1$1_0_1
                                    cmp1$2_0_1
                                    (INV_42 i.0$1_0_2 n$1_0_1 i.0$2_0_2 n$2_0_1 result$1_1 result$2_1))
                                 (INV_42 i.0$1_0_old_1 n$1_0_old_1 i.0$2_0_old_1 n$2_0_old_1 result$1_1 result$2_1))))))))))))
(rule
   (let
      ((n$1_0_1 n$1_0_old_1))
      (let
         ((z$1_0_1 z$1_0_old_1)
          (cmp$1_0_1 (<= n$1_0_1 0)))
         (let
            ((r.0$1_0_1 n$1_0_1))
            (let
               ((result$1_1 r.0$1_0_1))
               (=>
                  (and
                     (INV_REC_f__1_PRE n$1_0_old_1 z$1_0_old_1)
                     cmp$1_0_1)
                  (INV_REC_f__1 n$1_0_old_1 z$1_0_old_1 result$1_1)))))))
(rule
   (let
      ((n$1_0_1 n$1_0_old_1))
      (let
         ((z$1_0_1 z$1_0_old_1)
          (cmp$1_0_1 (<= n$1_0_1 0)))
         (let
            ((i.0$1_0_1 0))
            (=>
               (and
                  (INV_REC_f__1_PRE n$1_0_old_1 z$1_0_old_1)
                  (not cmp$1_0_1)
                  (INV_42__1 i.0$1_0_1 n$1_0_1 result$1_1))
               (INV_REC_f__1 n$1_0_old_1 z$1_0_old_1 result$1_1))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (=>
               (and
                  (INV_42__1_PRE i.0$1_0_old_1 n$1_0_old_1)
                  (not cmp1$1_0_1))
               (INV_REC_f__1_PRE i.0$1_0_1 0))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((r.0$1_0_1 call2$1_0_1))
               (let
                  ((result$1_1 r.0$1_0_1))
                  (=>
                     (and
                        (INV_42__1_PRE i.0$1_0_old_1 n$1_0_old_1)
                        (not cmp1$1_0_1)
                        (INV_REC_f__1 i.0$1_0_1 0 call2$1_0_1))
                     (INV_42__1 i.0$1_0_old_1 n$1_0_old_1 result$1_1))))))))
(rule
   (let
      ((i.0$1_0_1 i.0$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((sub$1_0_1 (- n$1_0_1 1)))
         (let
            ((cmp1$1_0_1 (< i.0$1_0_1 sub$1_0_1)))
            (let
               ((add$1_0_1 (+ i.0$1_0_1 1)))
               (let
                  ((i.0$1_0_2 add$1_0_1))
                  (=>
                     (and
                        (INV_42__1_PRE i.0$1_0_old_1 n$1_0_old_1)
                        cmp1$1_0_1
                        (INV_42__1 i.0$1_0_2 n$1_0_1 result$1_1))
                     (INV_42__1 i.0$1_0_old_1 n$1_0_old_1 result$1_1))))))))
(rule
   (let
      ((n$2_0_1 n$2_0_old_1))
      (let
         ((z$2_0_1 z$2_0_old_1)
          (cmp$2_0_1 (<= n$2_0_1 0)))
         (let
            ((r.0$2_0_1 n$2_0_1))
            (let
               ((result$2_1 r.0$2_0_1))
               (=>
                  (and
                     (INV_REC_f__2_PRE n$2_0_old_1 z$2_0_old_1)
                     cmp$2_0_1)
                  (INV_REC_f__2 n$2_0_old_1 z$2_0_old_1 result$2_1)))))))
(rule
   (let
      ((n$2_0_1 n$2_0_old_1))
      (let
         ((z$2_0_1 z$2_0_old_1)
          (cmp$2_0_1 (<= n$2_0_1 0)))
         (let
            ((i.0$2_0_1 0))
            (=>
               (and
                  (INV_REC_f__2_PRE n$2_0_old_1 z$2_0_old_1)
                  (not cmp$2_0_1)
                  (INV_42__2 i.0$2_0_1 n$2_0_1 result$2_1))
               (INV_REC_f__2 n$2_0_old_1 z$2_0_old_1 result$2_1))))))
(rule
   (let
      ((i.0$2_0_1 i.0$2_0_old_1)
       (n$2_0_1 n$2_0_old_1))
      (let
         ((sub$2_0_1 (- n$2_0_1 1)))
         (let
            ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
            (=>
               (and
                  (INV_42__2_PRE i.0$2_0_old_1 n$2_0_old_1)
                  (not cmp1$2_0_1))
               (INV_REC_f__2_PRE i.0$2_0_1 0))))))
(rule
   (let
      ((i.0$2_0_1 i.0$2_0_old_1)
       (n$2_0_1 n$2_0_old_1))
      (let
         ((sub$2_0_1 (- n$2_0_1 1)))
         (let
            ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
            (let
               ((r.0$2_0_1 call2$2_0_1))
               (let
                  ((result$2_1 r.0$2_0_1))
                  (=>
                     (and
                        (INV_42__2_PRE i.0$2_0_old_1 n$2_0_old_1)
                        (not cmp1$2_0_1)
                        (INV_REC_f__2 i.0$2_0_1 0 call2$2_0_1))
                     (INV_42__2 i.0$2_0_old_1 n$2_0_old_1 result$2_1))))))))
(rule
   (let
      ((i.0$2_0_1 i.0$2_0_old_1)
       (n$2_0_1 n$2_0_old_1))
      (let
         ((sub$2_0_1 (- n$2_0_1 1)))
         (let
            ((cmp1$2_0_1 (< i.0$2_0_1 sub$2_0_1)))
            (let
               ((add$2_0_1 (+ i.0$2_0_1 1)))
               (let
                  ((i.0$2_0_2 add$2_0_1))
                  (=>
                     (and
                        (INV_42__2_PRE i.0$2_0_old_1 n$2_0_old_1)
                        cmp1$2_0_1
                        (INV_42__2 i.0$2_0_2 n$2_0_1 result$2_1))
                     (INV_42__2 i.0$2_0_old_1 n$2_0_old_1 result$2_1))))))))
(query
   END_QUERY
   :print-certificate
   true)
