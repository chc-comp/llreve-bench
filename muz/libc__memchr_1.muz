;; Produced by llreve (commit dc2abeaa50d9197d51fa4223b58154246b164df0)
;; See https://formal.iti.kit.edu/reve and https://github.com/mattulbrich/llreve/
;; (c) 2018 KIT

(set-option
   :int-real-coercions
   false)
(declare-var
   HEAP$1_old_1
   (Array Int Int))
(declare-var
   HEAP$2_old_1
   (Array Int Int))
(declare-var
   c$1_0_old_1
   Int)
(declare-var
   c$2_0_old_1
   Int)
(declare-var
   dec$1_0_old_1
   Int)
(declare-var
   incdec.ptr$2_0_old_1
   Int)
(declare-var
   n$1_0_old_1
   Int)
(declare-var
   n$2_0_old_1
   Int)
(declare-var
   n.addr.0$2_0_old_1
   Int)
(declare-var
   pc.0$1_0_old_1
   Int)
(declare-var
   s$1_0_old_1
   Int)
(declare-var
   s$2_0_old_1
   Int)
(declare-rel
   END_QUERY
   ())
(define-fun
   IN_INV
   ((s$1_0 Int)
    (c$1_0 Int)
    (n$1_0 Int)
    (HEAP$1 (Array Int Int))
    (s$2_0 Int)
    (c$2_0 Int)
    (n$2_0 Int)
    (HEAP$2 (Array Int Int)))
   Bool
   (and
      (= s$1_0 s$2_0)
      (= c$1_0 c$2_0)
      (= n$1_0 n$2_0)
      (= HEAP$1 HEAP$2)))
(define-fun
   OUT_INV
   ((result$1 Int)
    (result$2 Int)
    (HEAP$1 (Array Int Int))
    (HEAP$2 (Array Int Int)))
   Bool
   (and
      (= result$1 result$2)
      (= HEAP$1 HEAP$2)))
; :annot (INV_MAIN_42 c$1_0 dec$1_0 pc.0$1_0 HEAP$1 c$2_0 incdec.ptr$2_0 n.addr.0$2_0 HEAP$2)
(declare-rel
   INV_MAIN_42
   (Int
    Int
    Int
    (Array Int Int)
    Int
    Int
    Int
    (Array Int Int)))
(rule
   (let
      ((s$1_0_1 s$1_0_old_1)
       (c$1_0_1 c$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (n.addr.0$1_0_1 n$1_0_1))
         (let
            ((pc.0$1_0_1 s$1_0_1)
             (dec$1_0_1 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((_$1_0_1 (select HEAP$1_1 pc.0$1_0_1)))
               (let
                  ((conv$1_0_1 _$1_0_1))
                  (let
                     ((cmp$1_0_1 (= conv$1_0_1 c$1_0_1)))
                     (let
                        ((retval.0$1_0_1 pc.0$1_0_1))
                        (let
                           ((result$1_1 retval.0$1_0_1)
                            (HEAP$1_res_1 HEAP$1_1)
                            (s$2_0_1 s$2_0_old_1)
                            (c$2_0_1 c$2_0_old_1)
                            (n$2_0_1 n$2_0_old_1))
                           (let
                              ((HEAP$2_1 HEAP$2_old_1)
                               (cmp$2_0_1 (distinct n$2_0_1 0)))
                              (let
                                 ((n.addr.0$2_0_1 n$2_0_1)
                                  (p.0$2_0_1 s$2_0_1))
                                 (let
                                    ((incdec.ptr$2_0_1 (+ p.0$2_0_1 1))
                                     (_$2_0_1 (select HEAP$2_1 p.0$2_0_1)))
                                    (let
                                       ((conv$2_0_1 _$2_0_1)
                                        (conv1$2_0_1 c$2_0_1))
                                       (let
                                          ((conv2$2_0_1 conv1$2_0_1))
                                          (let
                                             ((cmp3$2_0_1 (= conv$2_0_1 conv2$2_0_1)))
                                             (=>
                                                (and
                                                   (IN_INV s$1_0_old_1 c$1_0_old_1 n$1_0_old_1 HEAP$1_old_1 s$2_0_old_1 c$2_0_old_1 n$2_0_old_1 HEAP$2_old_1)
                                                   tobool$1_0_1
                                                   cmp$1_0_1
                                                   cmp$2_0_1
                                                   (not cmp3$2_0_1))
                                                END_QUERY))))))))))))))))
(rule
   (let
      ((s$1_0_1 s$1_0_old_1)
       (c$1_0_1 c$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (n.addr.0$1_0_1 n$1_0_1))
         (let
            ((pc.0$1_0_1 s$1_0_1)
             (dec$1_0_1 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((retval.0$1_0_1 0))
               (let
                  ((result$1_1 retval.0$1_0_1)
                   (HEAP$1_res_1 HEAP$1_1)
                   (s$2_0_1 s$2_0_old_1)
                   (c$2_0_1 c$2_0_old_1)
                   (n$2_0_1 n$2_0_old_1))
                  (let
                     ((HEAP$2_1 HEAP$2_old_1)
                      (cmp$2_0_1 (distinct n$2_0_1 0)))
                     (let
                        ((n.addr.0$2_0_1 n$2_0_1)
                         (p.0$2_0_1 s$2_0_1))
                        (let
                           ((incdec.ptr$2_0_1 (+ p.0$2_0_1 1))
                            (_$2_0_1 (select HEAP$2_1 p.0$2_0_1)))
                           (let
                              ((conv$2_0_1 _$2_0_1)
                               (conv1$2_0_1 c$2_0_1))
                              (let
                                 ((conv2$2_0_1 conv1$2_0_1))
                                 (let
                                    ((cmp3$2_0_1 (= conv$2_0_1 conv2$2_0_1)))
                                    (=>
                                       (and
                                          (IN_INV s$1_0_old_1 c$1_0_old_1 n$1_0_old_1 HEAP$1_old_1 s$2_0_old_1 c$2_0_old_1 n$2_0_old_1 HEAP$2_old_1)
                                          (not tobool$1_0_1)
                                          cmp$2_0_1
                                          (not cmp3$2_0_1))
                                       END_QUERY)))))))))))))
(rule
   (let
      ((s$1_0_1 s$1_0_old_1)
       (c$1_0_1 c$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (n.addr.0$1_0_1 n$1_0_1))
         (let
            ((pc.0$1_0_1 s$1_0_1)
             (dec$1_0_1 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((_$1_0_1 (select HEAP$1_1 pc.0$1_0_1)))
               (let
                  ((conv$1_0_1 _$1_0_1))
                  (let
                     ((cmp$1_0_1 (= conv$1_0_1 c$1_0_1)))
                     (let
                        ((s$2_0_1 s$2_0_old_1)
                         (c$2_0_1 c$2_0_old_1)
                         (n$2_0_1 n$2_0_old_1))
                        (let
                           ((HEAP$2_1 HEAP$2_old_1)
                            (cmp$2_0_1 (distinct n$2_0_1 0)))
                           (let
                              ((n.addr.0$2_0_1 n$2_0_1)
                               (p.0$2_0_1 s$2_0_1))
                              (let
                                 ((incdec.ptr$2_0_1 (+ p.0$2_0_1 1))
                                  (_$2_0_1 (select HEAP$2_1 p.0$2_0_1)))
                                 (let
                                    ((conv$2_0_1 _$2_0_1)
                                     (conv1$2_0_1 c$2_0_1))
                                    (let
                                       ((conv2$2_0_1 conv1$2_0_1))
                                       (let
                                          ((cmp3$2_0_1 (= conv$2_0_1 conv2$2_0_1)))
                                          (=>
                                             (and
                                                (IN_INV s$1_0_old_1 c$1_0_old_1 n$1_0_old_1 HEAP$1_old_1 s$2_0_old_1 c$2_0_old_1 n$2_0_old_1 HEAP$2_old_1)
                                                tobool$1_0_1
                                                (not cmp$1_0_1)
                                                cmp$2_0_1
                                                cmp3$2_0_1)
                                             END_QUERY)))))))))))))))
(rule
   (let
      ((s$1_0_1 s$1_0_old_1)
       (c$1_0_1 c$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (n.addr.0$1_0_1 n$1_0_1))
         (let
            ((pc.0$1_0_1 s$1_0_1)
             (dec$1_0_1 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((_$1_0_1 (select HEAP$1_1 pc.0$1_0_1)))
               (let
                  ((conv$1_0_1 _$1_0_1))
                  (let
                     ((cmp$1_0_1 (= conv$1_0_1 c$1_0_1)))
                     (let
                        ((s$2_0_1 s$2_0_old_1)
                         (c$2_0_1 c$2_0_old_1)
                         (n$2_0_1 n$2_0_old_1))
                        (let
                           ((HEAP$2_1 HEAP$2_old_1)
                            (cmp$2_0_1 (distinct n$2_0_1 0)))
                           (=>
                              (and
                                 (IN_INV s$1_0_old_1 c$1_0_old_1 n$1_0_old_1 HEAP$1_old_1 s$2_0_old_1 c$2_0_old_1 n$2_0_old_1 HEAP$2_old_1)
                                 tobool$1_0_1
                                 (not cmp$1_0_1)
                                 (not cmp$2_0_1))
                              END_QUERY))))))))))
(rule
   (let
      ((s$1_0_1 s$1_0_old_1)
       (c$1_0_1 c$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (n.addr.0$1_0_1 n$1_0_1))
         (let
            ((pc.0$1_0_1 s$1_0_1)
             (dec$1_0_1 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((_$1_0_1 (select HEAP$1_1 pc.0$1_0_1)))
               (let
                  ((conv$1_0_1 _$1_0_1))
                  (let
                     ((cmp$1_0_1 (= conv$1_0_1 c$1_0_1)))
                     (let
                        ((retval.0$1_0_1 pc.0$1_0_1))
                        (let
                           ((result$1_1 retval.0$1_0_1)
                            (HEAP$1_res_1 HEAP$1_1)
                            (s$2_0_1 s$2_0_old_1)
                            (c$2_0_1 c$2_0_old_1)
                            (n$2_0_1 n$2_0_old_1))
                           (let
                              ((HEAP$2_1 HEAP$2_old_1)
                               (cmp$2_0_1 (distinct n$2_0_1 0)))
                              (let
                                 ((n.addr.0$2_0_1 n$2_0_1)
                                  (p.0$2_0_1 s$2_0_1))
                                 (let
                                    ((incdec.ptr$2_0_1 (+ p.0$2_0_1 1))
                                     (_$2_0_1 (select HEAP$2_1 p.0$2_0_1)))
                                    (let
                                       ((conv$2_0_1 _$2_0_1)
                                        (conv1$2_0_1 c$2_0_1))
                                       (let
                                          ((conv2$2_0_1 conv1$2_0_1))
                                          (let
                                             ((cmp3$2_0_1 (= conv$2_0_1 conv2$2_0_1)))
                                             (let
                                                ((add.ptr$2_0_1 (+ incdec.ptr$2_0_1 (- 1))))
                                                (let
                                                   ((retval.0$2_0_1 add.ptr$2_0_1))
                                                   (let
                                                      ((result$2_1 retval.0$2_0_1)
                                                       (HEAP$2_res_1 HEAP$2_1))
                                                      (=>
                                                         (and
                                                            (IN_INV s$1_0_old_1 c$1_0_old_1 n$1_0_old_1 HEAP$1_old_1 s$2_0_old_1 c$2_0_old_1 n$2_0_old_1 HEAP$2_old_1)
                                                            tobool$1_0_1
                                                            cmp$1_0_1
                                                            cmp$2_0_1
                                                            cmp3$2_0_1
                                                            (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                                         END_QUERY)))))))))))))))))))
(rule
   (let
      ((s$1_0_1 s$1_0_old_1)
       (c$1_0_1 c$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (n.addr.0$1_0_1 n$1_0_1))
         (let
            ((pc.0$1_0_1 s$1_0_1)
             (dec$1_0_1 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((_$1_0_1 (select HEAP$1_1 pc.0$1_0_1)))
               (let
                  ((conv$1_0_1 _$1_0_1))
                  (let
                     ((cmp$1_0_1 (= conv$1_0_1 c$1_0_1)))
                     (let
                        ((retval.0$1_0_1 pc.0$1_0_1))
                        (let
                           ((result$1_1 retval.0$1_0_1)
                            (HEAP$1_res_1 HEAP$1_1)
                            (s$2_0_1 s$2_0_old_1)
                            (c$2_0_1 c$2_0_old_1)
                            (n$2_0_1 n$2_0_old_1))
                           (let
                              ((HEAP$2_1 HEAP$2_old_1)
                               (cmp$2_0_1 (distinct n$2_0_1 0)))
                              (let
                                 ((retval.0$2_0_1 0))
                                 (let
                                    ((result$2_1 retval.0$2_0_1)
                                     (HEAP$2_res_1 HEAP$2_1))
                                    (=>
                                       (and
                                          (IN_INV s$1_0_old_1 c$1_0_old_1 n$1_0_old_1 HEAP$1_old_1 s$2_0_old_1 c$2_0_old_1 n$2_0_old_1 HEAP$2_old_1)
                                          tobool$1_0_1
                                          cmp$1_0_1
                                          (not cmp$2_0_1)
                                          (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                       END_QUERY)))))))))))))
(rule
   (let
      ((s$1_0_1 s$1_0_old_1)
       (c$1_0_1 c$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (n.addr.0$1_0_1 n$1_0_1))
         (let
            ((pc.0$1_0_1 s$1_0_1)
             (dec$1_0_1 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((retval.0$1_0_1 0))
               (let
                  ((result$1_1 retval.0$1_0_1)
                   (HEAP$1_res_1 HEAP$1_1)
                   (s$2_0_1 s$2_0_old_1)
                   (c$2_0_1 c$2_0_old_1)
                   (n$2_0_1 n$2_0_old_1))
                  (let
                     ((HEAP$2_1 HEAP$2_old_1)
                      (cmp$2_0_1 (distinct n$2_0_1 0)))
                     (let
                        ((n.addr.0$2_0_1 n$2_0_1)
                         (p.0$2_0_1 s$2_0_1))
                        (let
                           ((incdec.ptr$2_0_1 (+ p.0$2_0_1 1))
                            (_$2_0_1 (select HEAP$2_1 p.0$2_0_1)))
                           (let
                              ((conv$2_0_1 _$2_0_1)
                               (conv1$2_0_1 c$2_0_1))
                              (let
                                 ((conv2$2_0_1 conv1$2_0_1))
                                 (let
                                    ((cmp3$2_0_1 (= conv$2_0_1 conv2$2_0_1)))
                                    (let
                                       ((add.ptr$2_0_1 (+ incdec.ptr$2_0_1 (- 1))))
                                       (let
                                          ((retval.0$2_0_1 add.ptr$2_0_1))
                                          (let
                                             ((result$2_1 retval.0$2_0_1)
                                              (HEAP$2_res_1 HEAP$2_1))
                                             (=>
                                                (and
                                                   (IN_INV s$1_0_old_1 c$1_0_old_1 n$1_0_old_1 HEAP$1_old_1 s$2_0_old_1 c$2_0_old_1 n$2_0_old_1 HEAP$2_old_1)
                                                   (not tobool$1_0_1)
                                                   cmp$2_0_1
                                                   cmp3$2_0_1
                                                   (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                                END_QUERY))))))))))))))))
(rule
   (let
      ((s$1_0_1 s$1_0_old_1)
       (c$1_0_1 c$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (n.addr.0$1_0_1 n$1_0_1))
         (let
            ((pc.0$1_0_1 s$1_0_1)
             (dec$1_0_1 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((retval.0$1_0_1 0))
               (let
                  ((result$1_1 retval.0$1_0_1)
                   (HEAP$1_res_1 HEAP$1_1)
                   (s$2_0_1 s$2_0_old_1)
                   (c$2_0_1 c$2_0_old_1)
                   (n$2_0_1 n$2_0_old_1))
                  (let
                     ((HEAP$2_1 HEAP$2_old_1)
                      (cmp$2_0_1 (distinct n$2_0_1 0)))
                     (let
                        ((retval.0$2_0_1 0))
                        (let
                           ((result$2_1 retval.0$2_0_1)
                            (HEAP$2_res_1 HEAP$2_1))
                           (=>
                              (and
                                 (IN_INV s$1_0_old_1 c$1_0_old_1 n$1_0_old_1 HEAP$1_old_1 s$2_0_old_1 c$2_0_old_1 n$2_0_old_1 HEAP$2_old_1)
                                 (not tobool$1_0_1)
                                 (not cmp$2_0_1)
                                 (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                              END_QUERY))))))))))
(rule
   (let
      ((s$1_0_1 s$1_0_old_1)
       (c$1_0_1 c$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (n.addr.0$1_0_1 n$1_0_1))
         (let
            ((pc.0$1_0_1 s$1_0_1)
             (dec$1_0_1 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((_$1_0_1 (select HEAP$1_1 pc.0$1_0_1)))
               (let
                  ((conv$1_0_1 _$1_0_1))
                  (let
                     ((cmp$1_0_1 (= conv$1_0_1 c$1_0_1)))
                     (let
                        ((s$2_0_1 s$2_0_old_1)
                         (c$2_0_1 c$2_0_old_1)
                         (n$2_0_1 n$2_0_old_1))
                        (let
                           ((HEAP$2_1 HEAP$2_old_1)
                            (cmp$2_0_1 (distinct n$2_0_1 0)))
                           (let
                              ((n.addr.0$2_0_1 n$2_0_1)
                               (p.0$2_0_1 s$2_0_1))
                              (let
                                 ((incdec.ptr$2_0_1 (+ p.0$2_0_1 1))
                                  (_$2_0_1 (select HEAP$2_1 p.0$2_0_1)))
                                 (let
                                    ((conv$2_0_1 _$2_0_1)
                                     (conv1$2_0_1 c$2_0_1))
                                    (let
                                       ((conv2$2_0_1 conv1$2_0_1))
                                       (let
                                          ((cmp3$2_0_1 (= conv$2_0_1 conv2$2_0_1)))
                                          (=>
                                             (and
                                                (IN_INV s$1_0_old_1 c$1_0_old_1 n$1_0_old_1 HEAP$1_old_1 s$2_0_old_1 c$2_0_old_1 n$2_0_old_1 HEAP$2_old_1)
                                                tobool$1_0_1
                                                (not cmp$1_0_1)
                                                cmp$2_0_1
                                                (not cmp3$2_0_1))
                                             (INV_MAIN_42 c$1_0_1 dec$1_0_1 pc.0$1_0_1 HEAP$1_1 c$2_0_1 incdec.ptr$2_0_1 n.addr.0$2_0_1 HEAP$2_1))))))))))))))))
(rule
   (let
      ((c$1_0_1 c$1_0_old_1)
       (dec$1_0_1 dec$1_0_old_1)
       (pc.0$1_0_1 pc.0$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (incdec.ptr$1_0_1 (+ pc.0$1_0_1 1))
          (n.addr.0$1_0_1 dec$1_0_1))
         (let
            ((pc.0$1_0_2 incdec.ptr$1_0_1)
             (dec$1_0_2 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((_$1_0_1 (select HEAP$1_1 pc.0$1_0_2)))
               (let
                  ((conv$1_0_1 _$1_0_1))
                  (let
                     ((cmp$1_0_1 (= conv$1_0_1 c$1_0_1)))
                     (let
                        ((retval.0$1_0_1 pc.0$1_0_2))
                        (let
                           ((result$1_1 retval.0$1_0_1)
                            (HEAP$1_res_1 HEAP$1_1)
                            (c$2_0_1 c$2_0_old_1)
                            (incdec.ptr$2_0_1 incdec.ptr$2_0_old_1)
                            (n.addr.0$2_0_1 n.addr.0$2_0_old_1))
                           (let
                              ((HEAP$2_1 HEAP$2_old_1)
                               (dec$2_0_1 (+ n.addr.0$2_0_1 (- 1))))
                              (let
                                 ((cmp6$2_0_1 (distinct dec$2_0_1 0)))
                                 (let
                                    ((n.addr.0$2_0_2 dec$2_0_1)
                                     (p.0$2_0_1 incdec.ptr$2_0_1))
                                    (let
                                       ((incdec.ptr$2_0_2 (+ p.0$2_0_1 1))
                                        (_$2_0_1 (select HEAP$2_1 p.0$2_0_1)))
                                       (let
                                          ((conv$2_0_1 _$2_0_1)
                                           (conv1$2_0_1 c$2_0_1))
                                          (let
                                             ((conv2$2_0_1 conv1$2_0_1))
                                             (let
                                                ((cmp3$2_0_1 (= conv$2_0_1 conv2$2_0_1)))
                                                (let
                                                   ((add.ptr$2_0_1 (+ incdec.ptr$2_0_2 (- 1))))
                                                   (let
                                                      ((retval.0$2_0_1 add.ptr$2_0_1))
                                                      (let
                                                         ((result$2_1 retval.0$2_0_1)
                                                          (HEAP$2_res_1 HEAP$2_1))
                                                         (=>
                                                            (and
                                                               (INV_MAIN_42 c$1_0_old_1 dec$1_0_old_1 pc.0$1_0_old_1 HEAP$1_old_1 c$2_0_old_1 incdec.ptr$2_0_old_1 n.addr.0$2_0_old_1 HEAP$2_old_1)
                                                               tobool$1_0_1
                                                               cmp$1_0_1
                                                               cmp6$2_0_1
                                                               cmp3$2_0_1
                                                               (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                                            END_QUERY))))))))))))))))))))
(rule
   (let
      ((c$1_0_1 c$1_0_old_1)
       (dec$1_0_1 dec$1_0_old_1)
       (pc.0$1_0_1 pc.0$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (incdec.ptr$1_0_1 (+ pc.0$1_0_1 1))
          (n.addr.0$1_0_1 dec$1_0_1))
         (let
            ((pc.0$1_0_2 incdec.ptr$1_0_1)
             (dec$1_0_2 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((_$1_0_1 (select HEAP$1_1 pc.0$1_0_2)))
               (let
                  ((conv$1_0_1 _$1_0_1))
                  (let
                     ((cmp$1_0_1 (= conv$1_0_1 c$1_0_1)))
                     (let
                        ((retval.0$1_0_1 pc.0$1_0_2))
                        (let
                           ((result$1_1 retval.0$1_0_1)
                            (HEAP$1_res_1 HEAP$1_1)
                            (c$2_0_1 c$2_0_old_1)
                            (incdec.ptr$2_0_1 incdec.ptr$2_0_old_1)
                            (n.addr.0$2_0_1 n.addr.0$2_0_old_1))
                           (let
                              ((HEAP$2_1 HEAP$2_old_1)
                               (dec$2_0_1 (+ n.addr.0$2_0_1 (- 1))))
                              (let
                                 ((cmp6$2_0_1 (distinct dec$2_0_1 0)))
                                 (let
                                    ((retval.0$2_0_1 0))
                                    (let
                                       ((result$2_1 retval.0$2_0_1)
                                        (HEAP$2_res_1 HEAP$2_1))
                                       (=>
                                          (and
                                             (INV_MAIN_42 c$1_0_old_1 dec$1_0_old_1 pc.0$1_0_old_1 HEAP$1_old_1 c$2_0_old_1 incdec.ptr$2_0_old_1 n.addr.0$2_0_old_1 HEAP$2_old_1)
                                             tobool$1_0_1
                                             cmp$1_0_1
                                             (not cmp6$2_0_1)
                                             (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                          END_QUERY))))))))))))))
(rule
   (let
      ((c$1_0_1 c$1_0_old_1)
       (dec$1_0_1 dec$1_0_old_1)
       (pc.0$1_0_1 pc.0$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (incdec.ptr$1_0_1 (+ pc.0$1_0_1 1))
          (n.addr.0$1_0_1 dec$1_0_1))
         (let
            ((pc.0$1_0_2 incdec.ptr$1_0_1)
             (dec$1_0_2 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((retval.0$1_0_1 0))
               (let
                  ((result$1_1 retval.0$1_0_1)
                   (HEAP$1_res_1 HEAP$1_1)
                   (c$2_0_1 c$2_0_old_1)
                   (incdec.ptr$2_0_1 incdec.ptr$2_0_old_1)
                   (n.addr.0$2_0_1 n.addr.0$2_0_old_1))
                  (let
                     ((HEAP$2_1 HEAP$2_old_1)
                      (dec$2_0_1 (+ n.addr.0$2_0_1 (- 1))))
                     (let
                        ((cmp6$2_0_1 (distinct dec$2_0_1 0)))
                        (let
                           ((n.addr.0$2_0_2 dec$2_0_1)
                            (p.0$2_0_1 incdec.ptr$2_0_1))
                           (let
                              ((incdec.ptr$2_0_2 (+ p.0$2_0_1 1))
                               (_$2_0_1 (select HEAP$2_1 p.0$2_0_1)))
                              (let
                                 ((conv$2_0_1 _$2_0_1)
                                  (conv1$2_0_1 c$2_0_1))
                                 (let
                                    ((conv2$2_0_1 conv1$2_0_1))
                                    (let
                                       ((cmp3$2_0_1 (= conv$2_0_1 conv2$2_0_1)))
                                       (let
                                          ((add.ptr$2_0_1 (+ incdec.ptr$2_0_2 (- 1))))
                                          (let
                                             ((retval.0$2_0_1 add.ptr$2_0_1))
                                             (let
                                                ((result$2_1 retval.0$2_0_1)
                                                 (HEAP$2_res_1 HEAP$2_1))
                                                (=>
                                                   (and
                                                      (INV_MAIN_42 c$1_0_old_1 dec$1_0_old_1 pc.0$1_0_old_1 HEAP$1_old_1 c$2_0_old_1 incdec.ptr$2_0_old_1 n.addr.0$2_0_old_1 HEAP$2_old_1)
                                                      (not tobool$1_0_1)
                                                      cmp6$2_0_1
                                                      cmp3$2_0_1
                                                      (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                                   END_QUERY)))))))))))))))))
(rule
   (let
      ((c$1_0_1 c$1_0_old_1)
       (dec$1_0_1 dec$1_0_old_1)
       (pc.0$1_0_1 pc.0$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (incdec.ptr$1_0_1 (+ pc.0$1_0_1 1))
          (n.addr.0$1_0_1 dec$1_0_1))
         (let
            ((pc.0$1_0_2 incdec.ptr$1_0_1)
             (dec$1_0_2 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((retval.0$1_0_1 0))
               (let
                  ((result$1_1 retval.0$1_0_1)
                   (HEAP$1_res_1 HEAP$1_1)
                   (c$2_0_1 c$2_0_old_1)
                   (incdec.ptr$2_0_1 incdec.ptr$2_0_old_1)
                   (n.addr.0$2_0_1 n.addr.0$2_0_old_1))
                  (let
                     ((HEAP$2_1 HEAP$2_old_1)
                      (dec$2_0_1 (+ n.addr.0$2_0_1 (- 1))))
                     (let
                        ((cmp6$2_0_1 (distinct dec$2_0_1 0)))
                        (let
                           ((retval.0$2_0_1 0))
                           (let
                              ((result$2_1 retval.0$2_0_1)
                               (HEAP$2_res_1 HEAP$2_1))
                              (=>
                                 (and
                                    (INV_MAIN_42 c$1_0_old_1 dec$1_0_old_1 pc.0$1_0_old_1 HEAP$1_old_1 c$2_0_old_1 incdec.ptr$2_0_old_1 n.addr.0$2_0_old_1 HEAP$2_old_1)
                                    (not tobool$1_0_1)
                                    (not cmp6$2_0_1)
                                    (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                 END_QUERY)))))))))))
(rule
   (let
      ((c$1_0_1 c$1_0_old_1)
       (dec$1_0_1 dec$1_0_old_1)
       (pc.0$1_0_1 pc.0$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (incdec.ptr$1_0_1 (+ pc.0$1_0_1 1))
          (n.addr.0$1_0_1 dec$1_0_1))
         (let
            ((pc.0$1_0_2 incdec.ptr$1_0_1)
             (dec$1_0_2 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((_$1_0_1 (select HEAP$1_1 pc.0$1_0_2)))
               (let
                  ((conv$1_0_1 _$1_0_1))
                  (let
                     ((cmp$1_0_1 (= conv$1_0_1 c$1_0_1)))
                     (let
                        ((c$2_0_1 c$2_0_old_1)
                         (incdec.ptr$2_0_1 incdec.ptr$2_0_old_1)
                         (n.addr.0$2_0_1 n.addr.0$2_0_old_1))
                        (let
                           ((HEAP$2_1 HEAP$2_old_1)
                            (dec$2_0_1 (+ n.addr.0$2_0_1 (- 1))))
                           (let
                              ((cmp6$2_0_1 (distinct dec$2_0_1 0)))
                              (let
                                 ((n.addr.0$2_0_2 dec$2_0_1)
                                  (p.0$2_0_1 incdec.ptr$2_0_1))
                                 (let
                                    ((incdec.ptr$2_0_2 (+ p.0$2_0_1 1))
                                     (_$2_0_1 (select HEAP$2_1 p.0$2_0_1)))
                                    (let
                                       ((conv$2_0_1 _$2_0_1)
                                        (conv1$2_0_1 c$2_0_1))
                                       (let
                                          ((conv2$2_0_1 conv1$2_0_1))
                                          (let
                                             ((cmp3$2_0_1 (= conv$2_0_1 conv2$2_0_1)))
                                             (=>
                                                (and
                                                   (INV_MAIN_42 c$1_0_old_1 dec$1_0_old_1 pc.0$1_0_old_1 HEAP$1_old_1 c$2_0_old_1 incdec.ptr$2_0_old_1 n.addr.0$2_0_old_1 HEAP$2_old_1)
                                                   tobool$1_0_1
                                                   (not cmp$1_0_1)
                                                   cmp6$2_0_1
                                                   (not cmp3$2_0_1))
                                                (INV_MAIN_42 c$1_0_1 dec$1_0_2 pc.0$1_0_2 HEAP$1_1 c$2_0_1 incdec.ptr$2_0_2 n.addr.0$2_0_2 HEAP$2_1)))))))))))))))))
(rule
   (let
      ((c$1_0_1 c$1_0_old_1)
       (dec$1_0_1 dec$1_0_old_1)
       (pc.0$1_0_1 pc.0$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (incdec.ptr$1_0_1 (+ pc.0$1_0_1 1))
          (n.addr.0$1_0_1 dec$1_0_1))
         (let
            ((pc.0$1_0_2 incdec.ptr$1_0_1)
             (dec$1_0_2 (+ n.addr.0$1_0_1 (- 1)))
             (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
            (let
               ((_$1_0_1 (select HEAP$1_1 pc.0$1_0_2)))
               (let
                  ((conv$1_0_1 _$1_0_1))
                  (let
                     ((cmp$1_0_1 (= conv$1_0_1 c$1_0_1)))
                     (=>
                        (and
                           (INV_MAIN_42 c$1_0_old_1 dec$1_0_old_1 pc.0$1_0_old_1 HEAP$1_old_1 c$2_0_old_1 incdec.ptr$2_0_old_1 n.addr.0$2_0_old_1 HEAP$2_old_1)
                           tobool$1_0_1
                           (not cmp$1_0_1)
                           (let
                              ((c$2_0_1 c$2_0_old_1)
                               (incdec.ptr$2_0_1 incdec.ptr$2_0_old_1)
                               (n.addr.0$2_0_1 n.addr.0$2_0_old_1))
                              (let
                                 ((HEAP$2_1 HEAP$2_old_1)
                                  (dec$2_0_1 (+ n.addr.0$2_0_1 (- 1))))
                                 (let
                                    ((cmp6$2_0_1 (distinct dec$2_0_1 0)))
                                    (=>
                                       cmp6$2_0_1
                                       (let
                                          ((n.addr.0$2_0_2 dec$2_0_1)
                                           (p.0$2_0_1 incdec.ptr$2_0_1))
                                          (let
                                             ((incdec.ptr$2_0_2 (+ p.0$2_0_1 1))
                                              (_$2_0_1 (select HEAP$2_1 p.0$2_0_1)))
                                             (let
                                                ((conv$2_0_1 _$2_0_1)
                                                 (conv1$2_0_1 c$2_0_1))
                                                (let
                                                   ((conv2$2_0_1 conv1$2_0_1))
                                                   (let
                                                      ((cmp3$2_0_1 (= conv$2_0_1 conv2$2_0_1)))
                                                      (not (not cmp3$2_0_1))))))))))))
                        (INV_MAIN_42 c$1_0_1 dec$1_0_2 pc.0$1_0_2 HEAP$1_1 c$2_0_old_1 incdec.ptr$2_0_old_1 n.addr.0$2_0_old_1 HEAP$2_old_1)))))))))
(rule
   (let
      ((c$2_0_1 c$2_0_old_1)
       (incdec.ptr$2_0_1 incdec.ptr$2_0_old_1)
       (n.addr.0$2_0_1 n.addr.0$2_0_old_1))
      (let
         ((HEAP$2_1 HEAP$2_old_1)
          (dec$2_0_1 (+ n.addr.0$2_0_1 (- 1))))
         (let
            ((cmp6$2_0_1 (distinct dec$2_0_1 0)))
            (let
               ((n.addr.0$2_0_2 dec$2_0_1)
                (p.0$2_0_1 incdec.ptr$2_0_1))
               (let
                  ((incdec.ptr$2_0_2 (+ p.0$2_0_1 1))
                   (_$2_0_1 (select HEAP$2_1 p.0$2_0_1)))
                  (let
                     ((conv$2_0_1 _$2_0_1)
                      (conv1$2_0_1 c$2_0_1))
                     (let
                        ((conv2$2_0_1 conv1$2_0_1))
                        (let
                           ((cmp3$2_0_1 (= conv$2_0_1 conv2$2_0_1)))
                           (=>
                              (and
                                 (INV_MAIN_42 c$1_0_old_1 dec$1_0_old_1 pc.0$1_0_old_1 HEAP$1_old_1 c$2_0_old_1 incdec.ptr$2_0_old_1 n.addr.0$2_0_old_1 HEAP$2_old_1)
                                 cmp6$2_0_1
                                 (not cmp3$2_0_1)
                                 (let
                                    ((c$1_0_1 c$1_0_old_1)
                                     (dec$1_0_1 dec$1_0_old_1)
                                     (pc.0$1_0_1 pc.0$1_0_old_1))
                                    (let
                                       ((HEAP$1_1 HEAP$1_old_1)
                                        (incdec.ptr$1_0_1 (+ pc.0$1_0_1 1))
                                        (n.addr.0$1_0_1 dec$1_0_1))
                                       (let
                                          ((pc.0$1_0_2 incdec.ptr$1_0_1)
                                           (dec$1_0_2 (+ n.addr.0$1_0_1 (- 1)))
                                           (tobool$1_0_1 (distinct n.addr.0$1_0_1 0)))
                                          (=>
                                             tobool$1_0_1
                                             (let
                                                ((_$1_0_1 (select HEAP$1_1 pc.0$1_0_2)))
                                                (let
                                                   ((conv$1_0_1 _$1_0_1))
                                                   (let
                                                      ((cmp$1_0_1 (= conv$1_0_1 c$1_0_1)))
                                                      (not (not cmp$1_0_1))))))))))
                              (INV_MAIN_42 c$1_0_old_1 dec$1_0_old_1 pc.0$1_0_old_1 HEAP$1_old_1 c$2_0_1 incdec.ptr$2_0_2 n.addr.0$2_0_2 HEAP$2_1)))))))))))
(query
   END_QUERY
   :print-certificate
   true)
