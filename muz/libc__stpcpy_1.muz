;; Produced by llreve (commit dc2abeaa50d9197d51fa4223b58154246b164df0)
;; See https://formal.iti.kit.edu/reve and https://github.com/mattulbrich/llreve/
;; (c) 2018 KIT

(set-option
   :int-real-coercions
   false)
(declare-var
   HEAP$1_old_1
   (Array Int Int))
(declare-var
   HEAP$2_old_1
   (Array Int Int))
(declare-var
   dst$1_0_old_1
   Int)
(declare-var
   dst.addr.0$1_0_old_1
   Int)
(declare-var
   from$2_0_old_1
   Int)
(declare-var
   from.addr.0$2_0_old_1
   Int)
(declare-var
   src$1_0_old_1
   Int)
(declare-var
   src.addr.0$1_0_old_1
   Int)
(declare-var
   to$2_0_old_1
   Int)
(declare-var
   to.addr.0$2_0_old_1
   Int)
(declare-rel
   END_QUERY
   ())
(define-fun
   IN_INV
   ((dst$1_0 Int)
    (src$1_0 Int)
    (HEAP$1 (Array Int Int))
    (to$2_0 Int)
    (from$2_0 Int)
    (HEAP$2 (Array Int Int)))
   Bool
   (and
      (= dst$1_0 to$2_0)
      (= src$1_0 from$2_0)
      (= HEAP$1 HEAP$2)))
(define-fun
   OUT_INV
   ((result$1 Int)
    (result$2 Int)
    (HEAP$1 (Array Int Int))
    (HEAP$2 (Array Int Int)))
   Bool
   (and
      (= result$1 result$2)
      (= HEAP$1 HEAP$2)))
; :annot (INV_MAIN_0 dst.addr.0$1_0 src.addr.0$1_0 HEAP$1 from.addr.0$2_0 to.addr.0$2_0 HEAP$2)
(declare-rel
   INV_MAIN_0
   (Int
    Int
    (Array Int Int)
    Int
    Int
    (Array Int Int)))
(rule
   (let
      ((dst$1_0_1 dst$1_0_old_1)
       (src$1_0_1 src$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (src.addr.0$1_0_1 src$1_0_1)
          (dst.addr.0$1_0_1 dst$1_0_1)
          (to$2_0_1 to$2_0_old_1)
          (from$2_0_1 from$2_0_old_1))
         (let
            ((HEAP$2_1 HEAP$2_old_1)
             (from.addr.0$2_0_1 from$2_0_1)
             (to.addr.0$2_0_1 to$2_0_1))
            (=>
               (IN_INV dst$1_0_old_1 src$1_0_old_1 HEAP$1_old_1 to$2_0_old_1 from$2_0_old_1 HEAP$2_old_1)
               (INV_MAIN_0 dst.addr.0$1_0_1 src.addr.0$1_0_1 HEAP$1_1 from.addr.0$2_0_1 to.addr.0$2_0_1 HEAP$2_1))))))
(rule
   (let
      ((dst.addr.0$1_0_1 dst.addr.0$1_0_old_1)
       (src.addr.0$1_0_1 src.addr.0$1_0_old_1)
       (HEAP$1_1 HEAP$1_old_1))
      (let
         ((incdec.ptr$1_0_1 (+ src.addr.0$1_0_1 1))
          (_$1_0_1 (select HEAP$1_1 src.addr.0$1_0_1)))
         (let
            ((incdec.ptr1$1_0_1 (+ dst.addr.0$1_0_1 1))
             (HEAP$1_2 (store HEAP$1_1 dst.addr.0$1_0_1 _$1_0_1))
             (conv$1_0_1 _$1_0_1))
            (let
               ((tobool$1_0_1 (distinct conv$1_0_1 0)))
               (let
                  ((add.ptr$1_0_1 (+ incdec.ptr1$1_0_1 (- 1))))
                  (let
                     ((result$1_1 add.ptr$1_0_1)
                      (HEAP$1_res_1 HEAP$1_2)
                      (from.addr.0$2_0_1 from.addr.0$2_0_old_1)
                      (to.addr.0$2_0_1 to.addr.0$2_0_old_1)
                      (HEAP$2_1 HEAP$2_old_1))
                     (let
                        ((_$2_0_1 (select HEAP$2_1 from.addr.0$2_0_1)))
                        (let
                           ((HEAP$2_2 (store HEAP$2_1 to.addr.0$2_0_1 _$2_0_1))
                            (conv$2_0_1 _$2_0_1))
                           (let
                              ((cmp$2_0_1 (distinct conv$2_0_1 0)))
                              (let
                                 ((result$2_1 to.addr.0$2_0_1)
                                  (HEAP$2_res_1 HEAP$2_2))
                                 (=>
                                    (and
                                       (INV_MAIN_0 dst.addr.0$1_0_old_1 src.addr.0$1_0_old_1 HEAP$1_old_1 from.addr.0$2_0_old_1 to.addr.0$2_0_old_1 HEAP$2_old_1)
                                       (not tobool$1_0_1)
                                       (not cmp$2_0_1)
                                       (not (OUT_INV result$1_1 result$2_1 HEAP$1_2 HEAP$2_2)))
                                    END_QUERY))))))))))))
(rule
   (let
      ((dst.addr.0$1_0_1 dst.addr.0$1_0_old_1)
       (src.addr.0$1_0_1 src.addr.0$1_0_old_1)
       (HEAP$1_1 HEAP$1_old_1))
      (let
         ((incdec.ptr$1_0_1 (+ src.addr.0$1_0_1 1))
          (_$1_0_1 (select HEAP$1_1 src.addr.0$1_0_1)))
         (let
            ((incdec.ptr1$1_0_1 (+ dst.addr.0$1_0_1 1))
             (HEAP$1_2 (store HEAP$1_1 dst.addr.0$1_0_1 _$1_0_1))
             (conv$1_0_1 _$1_0_1))
            (let
               ((tobool$1_0_1 (distinct conv$1_0_1 0)))
               (let
                  ((src.addr.0$1_0_2 incdec.ptr$1_0_1)
                   (dst.addr.0$1_0_2 incdec.ptr1$1_0_1)
                   (from.addr.0$2_0_1 from.addr.0$2_0_old_1)
                   (to.addr.0$2_0_1 to.addr.0$2_0_old_1)
                   (HEAP$2_1 HEAP$2_old_1))
                  (let
                     ((_$2_0_1 (select HEAP$2_1 from.addr.0$2_0_1)))
                     (let
                        ((HEAP$2_2 (store HEAP$2_1 to.addr.0$2_0_1 _$2_0_1))
                         (conv$2_0_1 _$2_0_1))
                        (let
                           ((cmp$2_0_1 (distinct conv$2_0_1 0)))
                           (let
                              ((incdec.ptr$2_0_1 (+ from.addr.0$2_0_1 1))
                               (incdec.ptr2$2_0_1 (+ to.addr.0$2_0_1 1)))
                              (let
                                 ((from.addr.0$2_0_2 incdec.ptr$2_0_1)
                                  (to.addr.0$2_0_2 incdec.ptr2$2_0_1))
                                 (=>
                                    (and
                                       (INV_MAIN_0 dst.addr.0$1_0_old_1 src.addr.0$1_0_old_1 HEAP$1_old_1 from.addr.0$2_0_old_1 to.addr.0$2_0_old_1 HEAP$2_old_1)
                                       tobool$1_0_1
                                       cmp$2_0_1)
                                    (INV_MAIN_0 dst.addr.0$1_0_2 src.addr.0$1_0_2 HEAP$1_2 from.addr.0$2_0_2 to.addr.0$2_0_2 HEAP$2_2)))))))))))))
(rule
   (let
      ((dst.addr.0$1_0_1 dst.addr.0$1_0_old_1)
       (src.addr.0$1_0_1 src.addr.0$1_0_old_1)
       (HEAP$1_1 HEAP$1_old_1))
      (let
         ((incdec.ptr$1_0_1 (+ src.addr.0$1_0_1 1))
          (_$1_0_1 (select HEAP$1_1 src.addr.0$1_0_1)))
         (let
            ((incdec.ptr1$1_0_1 (+ dst.addr.0$1_0_1 1))
             (HEAP$1_2 (store HEAP$1_1 dst.addr.0$1_0_1 _$1_0_1))
             (conv$1_0_1 _$1_0_1))
            (let
               ((tobool$1_0_1 (distinct conv$1_0_1 0)))
               (let
                  ((src.addr.0$1_0_2 incdec.ptr$1_0_1)
                   (dst.addr.0$1_0_2 incdec.ptr1$1_0_1))
                  (=>
                     (and
                        (INV_MAIN_0 dst.addr.0$1_0_old_1 src.addr.0$1_0_old_1 HEAP$1_old_1 from.addr.0$2_0_old_1 to.addr.0$2_0_old_1 HEAP$2_old_1)
                        tobool$1_0_1
                        (let
                           ((from.addr.0$2_0_1 from.addr.0$2_0_old_1)
                            (to.addr.0$2_0_1 to.addr.0$2_0_old_1)
                            (HEAP$2_1 HEAP$2_old_1))
                           (let
                              ((_$2_0_1 (select HEAP$2_1 from.addr.0$2_0_1)))
                              (let
                                 ((HEAP$2_2 (store HEAP$2_1 to.addr.0$2_0_1 _$2_0_1))
                                  (conv$2_0_1 _$2_0_1))
                                 (let
                                    ((cmp$2_0_1 (distinct conv$2_0_1 0)))
                                    (=>
                                       cmp$2_0_1
                                       (let
                                          ((incdec.ptr$2_0_1 (+ from.addr.0$2_0_1 1))
                                           (incdec.ptr2$2_0_1 (+ to.addr.0$2_0_1 1)))
                                          (let
                                             ((from.addr.0$2_0_2 incdec.ptr$2_0_1)
                                              (to.addr.0$2_0_2 incdec.ptr2$2_0_1))
                                             false))))))))
                     (INV_MAIN_0 dst.addr.0$1_0_2 src.addr.0$1_0_2 HEAP$1_2 from.addr.0$2_0_old_1 to.addr.0$2_0_old_1 HEAP$2_old_1))))))))
(rule
   (let
      ((from.addr.0$2_0_1 from.addr.0$2_0_old_1)
       (to.addr.0$2_0_1 to.addr.0$2_0_old_1)
       (HEAP$2_1 HEAP$2_old_1))
      (let
         ((_$2_0_1 (select HEAP$2_1 from.addr.0$2_0_1)))
         (let
            ((HEAP$2_2 (store HEAP$2_1 to.addr.0$2_0_1 _$2_0_1))
             (conv$2_0_1 _$2_0_1))
            (let
               ((cmp$2_0_1 (distinct conv$2_0_1 0)))
               (let
                  ((incdec.ptr$2_0_1 (+ from.addr.0$2_0_1 1))
                   (incdec.ptr2$2_0_1 (+ to.addr.0$2_0_1 1)))
                  (let
                     ((from.addr.0$2_0_2 incdec.ptr$2_0_1)
                      (to.addr.0$2_0_2 incdec.ptr2$2_0_1))
                     (=>
                        (and
                           (INV_MAIN_0 dst.addr.0$1_0_old_1 src.addr.0$1_0_old_1 HEAP$1_old_1 from.addr.0$2_0_old_1 to.addr.0$2_0_old_1 HEAP$2_old_1)
                           cmp$2_0_1
                           (let
                              ((dst.addr.0$1_0_1 dst.addr.0$1_0_old_1)
                               (src.addr.0$1_0_1 src.addr.0$1_0_old_1)
                               (HEAP$1_1 HEAP$1_old_1))
                              (let
                                 ((incdec.ptr$1_0_1 (+ src.addr.0$1_0_1 1))
                                  (_$1_0_1 (select HEAP$1_1 src.addr.0$1_0_1)))
                                 (let
                                    ((incdec.ptr1$1_0_1 (+ dst.addr.0$1_0_1 1))
                                     (HEAP$1_2 (store HEAP$1_1 dst.addr.0$1_0_1 _$1_0_1))
                                     (conv$1_0_1 _$1_0_1))
                                    (let
                                       ((tobool$1_0_1 (distinct conv$1_0_1 0)))
                                       (=>
                                          tobool$1_0_1
                                          (let
                                             ((src.addr.0$1_0_2 incdec.ptr$1_0_1)
                                              (dst.addr.0$1_0_2 incdec.ptr1$1_0_1))
                                             false)))))))
                        (INV_MAIN_0 dst.addr.0$1_0_old_1 src.addr.0$1_0_old_1 HEAP$1_old_1 from.addr.0$2_0_2 to.addr.0$2_0_2 HEAP$2_2)))))))))
(query
   END_QUERY
   :print-certificate
   true)
