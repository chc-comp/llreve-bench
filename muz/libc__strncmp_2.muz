;; Produced by llreve (commit dc2abeaa50d9197d51fa4223b58154246b164df0)
;; See https://formal.iti.kit.edu/reve and https://github.com/mattulbrich/llreve/
;; (c) 2018 KIT

(set-option
   :int-real-coercions
   false)
(declare-var
   HEAP$1_old_1
   (Array Int Int))
(declare-var
   HEAP$2_old_1
   (Array Int Int))
(declare-var
   a.0$2_0_old_1
   Int)
(declare-var
   add.ptr$2_0_old_1
   Int)
(declare-var
   b.0$2_0_old_1
   Int)
(declare-var
   c1.0$1_0_old_1
   Int)
(declare-var
   c2.0$1_0_old_1
   Int)
(declare-var
   n$1_0_old_1
   Int)
(declare-var
   n$2_0_old_1
   Int)
(declare-var
   n.addr.0$1_0_old_1
   Int)
(declare-var
   s1$1_0_old_1
   Int)
(declare-var
   s1$2_0_old_1
   Int)
(declare-var
   s1.addr.0$1_0_old_1
   Int)
(declare-var
   s2$1_0_old_1
   Int)
(declare-var
   s2$2_0_old_1
   Int)
(declare-var
   s2.addr.0$1_0_old_1
   Int)
(declare-rel
   END_QUERY
   ())
(define-fun
   IN_INV
   ((s1$1_0 Int)
    (s2$1_0 Int)
    (n$1_0 Int)
    (HEAP$1 (Array Int Int))
    (s1$2_0 Int)
    (s2$2_0 Int)
    (n$2_0 Int)
    (HEAP$2 (Array Int Int)))
   Bool
   (and
      (= s1$1_0 s1$2_0)
      (= s2$1_0 s2$2_0)
      (= n$1_0 n$2_0)
      (= HEAP$1 HEAP$2)))
(define-fun
   OUT_INV
   ((result$1 Int)
    (result$2 Int)
    (HEAP$1 (Array Int Int))
    (HEAP$2 (Array Int Int)))
   Bool
   (and
      (= result$1 result$2)
      (= HEAP$1 HEAP$2)))
; :annot (INV_MAIN_42 c1.0$1_0 c2.0$1_0 n.addr.0$1_0 s1.addr.0$1_0 s2.addr.0$1_0 HEAP$1 a.0$2_0 add.ptr$2_0 b.0$2_0 HEAP$2)
(declare-rel
   INV_MAIN_42
   (Int
    Int
    Int
    Int
    Int
    (Array Int Int)
    Int
    Int
    Int
    (Array Int Int)))
(rule
   (let
      ((s1$1_0_1 s1$1_0_old_1)
       (s2$1_0_1 s2$1_0_old_1)
       (n$1_0_1 n$1_0_old_1))
      (let
         ((HEAP$1_1 HEAP$1_old_1)
          (c2.0$1_0_1 0)
          (c1.0$1_0_1 0)
          (n.addr.0$1_0_1 n$1_0_1)
          (s2.addr.0$1_0_1 s2$1_0_1)
          (s1.addr.0$1_0_1 s1$1_0_1)
          (s1$2_0_1 s1$2_0_old_1)
          (s2$2_0_1 s2$2_0_old_1)
          (n$2_0_1 n$2_0_old_1))
         (let
            ((HEAP$2_1 HEAP$2_old_1)
             (add.ptr$2_0_1 (+ s1$2_0_1 n$2_0_1))
             (a.0$2_0_1 s1$2_0_1)
             (b.0$2_0_1 s2$2_0_1))
            (=>
               (IN_INV s1$1_0_old_1 s2$1_0_old_1 n$1_0_old_1 HEAP$1_old_1 s1$2_0_old_1 s2$2_0_old_1 n$2_0_old_1 HEAP$2_old_1)
               (INV_MAIN_42 c1.0$1_0_1 c2.0$1_0_1 n.addr.0$1_0_1 s1.addr.0$1_0_1 s2.addr.0$1_0_1 HEAP$1_1 a.0$2_0_1 add.ptr$2_0_1 b.0$2_0_1 HEAP$2_1))))))
(rule
   (let
      ((c1.0$1_0_1 c1.0$1_0_old_1)
       (c2.0$1_0_1 c2.0$1_0_old_1)
       (n.addr.0$1_0_1 n.addr.0$1_0_old_1))
      (let
         ((s1.addr.0$1_0_1 s1.addr.0$1_0_old_1)
          (s2.addr.0$1_0_1 s2.addr.0$1_0_old_1)
          (HEAP$1_1 HEAP$1_old_1)
          (cmp$1_0_1 (> (abs n.addr.0$1_0_1) (abs 0))))
         (let
            ((incdec.ptr$1_0_1 (+ s1.addr.0$1_0_1 1))
             (_$1_0_1 (select HEAP$1_1 s1.addr.0$1_0_1)))
            (let
               ((incdec.ptr1$1_0_1 (+ s2.addr.0$1_0_1 1))
                (_$1_1_1 (select HEAP$1_1 s2.addr.0$1_0_1))
                (conv2$1_0_1 _$1_0_1))
               (let
                  ((cmp3$1_0_1 (= conv2$1_0_1 0)))
                  (let
                     ((c1.0.sink$1_0_1 _$1_0_1)
                      (c2.0.sink$1_0_1 _$1_1_1))
                     (let
                        ((conv11$1_0_1 c1.0.sink$1_0_1)
                         (conv12$1_0_1 c2.0.sink$1_0_1))
                        (let
                           ((sub13$1_0_1 (- conv11$1_0_1 conv12$1_0_1)))
                           (let
                              ((result$1_1 sub13$1_0_1)
                               (HEAP$1_res_1 HEAP$1_1)
                               (a.0$2_0_1 a.0$2_0_old_1)
                               (add.ptr$2_0_1 add.ptr$2_0_old_1))
                              (let
                                 ((b.0$2_0_1 b.0$2_0_old_1)
                                  (HEAP$2_1 HEAP$2_old_1)
                                  (cmp$2_0_1 (distinct a.0$2_0_1 add.ptr$2_0_1)))
                                 (let
                                    ((_$2_0_1 (select HEAP$2_1 a.0$2_0_1)))
                                    (let
                                       ((conv1$2_0_1 _$2_0_1)
                                        (_$2_1_1 (select HEAP$2_1 b.0$2_0_1)))
                                       (let
                                          ((conv2$2_0_1 _$2_1_1))
                                          (let
                                             ((sub$2_0_1 (- conv1$2_0_1 conv2$2_0_1)))
                                             (let
                                                ((tobool3$2_0_1 (distinct sub$2_0_1 0)))
                                                (let
                                                   ((retval.0$2_0_1 sub$2_0_1))
                                                   (let
                                                      ((result$2_1 retval.0$2_0_1)
                                                       (HEAP$2_res_1 HEAP$2_1))
                                                      (=>
                                                         (and
                                                            (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1)
                                                            cmp$1_0_1
                                                            cmp3$1_0_1
                                                            cmp$2_0_1
                                                            tobool3$2_0_1
                                                            (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                                         END_QUERY)))))))))))))))))))
(rule
   (let
      ((c1.0$1_0_1 c1.0$1_0_old_1)
       (c2.0$1_0_1 c2.0$1_0_old_1)
       (n.addr.0$1_0_1 n.addr.0$1_0_old_1))
      (let
         ((s1.addr.0$1_0_1 s1.addr.0$1_0_old_1)
          (s2.addr.0$1_0_1 s2.addr.0$1_0_old_1)
          (HEAP$1_1 HEAP$1_old_1)
          (cmp$1_0_1 (> (abs n.addr.0$1_0_1) (abs 0))))
         (let
            ((incdec.ptr$1_0_1 (+ s1.addr.0$1_0_1 1))
             (_$1_0_1 (select HEAP$1_1 s1.addr.0$1_0_1)))
            (let
               ((incdec.ptr1$1_0_1 (+ s2.addr.0$1_0_1 1))
                (_$1_1_1 (select HEAP$1_1 s2.addr.0$1_0_1))
                (conv2$1_0_1 _$1_0_1))
               (let
                  ((cmp3$1_0_1 (= conv2$1_0_1 0)))
                  (let
                     ((c1.0.sink$1_0_1 _$1_0_1)
                      (c2.0.sink$1_0_1 _$1_1_1))
                     (let
                        ((conv11$1_0_1 c1.0.sink$1_0_1)
                         (conv12$1_0_1 c2.0.sink$1_0_1))
                        (let
                           ((sub13$1_0_1 (- conv11$1_0_1 conv12$1_0_1)))
                           (let
                              ((result$1_1 sub13$1_0_1)
                               (HEAP$1_res_1 HEAP$1_1)
                               (a.0$2_0_1 a.0$2_0_old_1)
                               (add.ptr$2_0_1 add.ptr$2_0_old_1))
                              (let
                                 ((b.0$2_0_1 b.0$2_0_old_1)
                                  (HEAP$2_1 HEAP$2_old_1)
                                  (cmp$2_0_1 (distinct a.0$2_0_1 add.ptr$2_0_1)))
                                 (let
                                    ((_$2_0_1 (select HEAP$2_1 a.0$2_0_1)))
                                    (let
                                       ((conv1$2_0_1 _$2_0_1)
                                        (_$2_1_1 (select HEAP$2_1 b.0$2_0_1)))
                                       (let
                                          ((conv2$2_0_1 _$2_1_1))
                                          (let
                                             ((sub$2_0_1 (- conv1$2_0_1 conv2$2_0_1)))
                                             (let
                                                ((tobool3$2_0_1 (distinct sub$2_0_1 0)))
                                                (let
                                                   ((_$2_2_1 (select HEAP$2_1 a.0$2_0_1)))
                                                   (let
                                                      ((tobool4$2_0_1 (distinct _$2_2_1 0)))
                                                      (let
                                                         ((retval.0$2_0_1 0))
                                                         (let
                                                            ((result$2_1 retval.0$2_0_1)
                                                             (HEAP$2_res_1 HEAP$2_1))
                                                            (=>
                                                               (and
                                                                  (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1)
                                                                  cmp$1_0_1
                                                                  cmp3$1_0_1
                                                                  cmp$2_0_1
                                                                  (not tobool3$2_0_1)
                                                                  (not tobool4$2_0_1)
                                                                  (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                                               END_QUERY)))))))))))))))))))))
(rule
   (let
      ((c1.0$1_0_1 c1.0$1_0_old_1)
       (c2.0$1_0_1 c2.0$1_0_old_1)
       (n.addr.0$1_0_1 n.addr.0$1_0_old_1))
      (let
         ((s1.addr.0$1_0_1 s1.addr.0$1_0_old_1)
          (s2.addr.0$1_0_1 s2.addr.0$1_0_old_1)
          (HEAP$1_1 HEAP$1_old_1)
          (cmp$1_0_1 (> (abs n.addr.0$1_0_1) (abs 0))))
         (let
            ((incdec.ptr$1_0_1 (+ s1.addr.0$1_0_1 1))
             (_$1_0_1 (select HEAP$1_1 s1.addr.0$1_0_1)))
            (let
               ((incdec.ptr1$1_0_1 (+ s2.addr.0$1_0_1 1))
                (_$1_1_1 (select HEAP$1_1 s2.addr.0$1_0_1))
                (conv2$1_0_1 _$1_0_1))
               (let
                  ((cmp3$1_0_1 (= conv2$1_0_1 0)))
                  (let
                     ((c1.0.sink$1_0_1 _$1_0_1)
                      (c2.0.sink$1_0_1 _$1_1_1))
                     (let
                        ((conv11$1_0_1 c1.0.sink$1_0_1)
                         (conv12$1_0_1 c2.0.sink$1_0_1))
                        (let
                           ((sub13$1_0_1 (- conv11$1_0_1 conv12$1_0_1)))
                           (let
                              ((result$1_1 sub13$1_0_1)
                               (HEAP$1_res_1 HEAP$1_1)
                               (a.0$2_0_1 a.0$2_0_old_1)
                               (add.ptr$2_0_1 add.ptr$2_0_old_1))
                              (let
                                 ((b.0$2_0_1 b.0$2_0_old_1)
                                  (HEAP$2_1 HEAP$2_old_1)
                                  (cmp$2_0_1 (distinct a.0$2_0_1 add.ptr$2_0_1)))
                                 (let
                                    ((retval.0$2_0_1 0))
                                    (let
                                       ((result$2_1 retval.0$2_0_1)
                                        (HEAP$2_res_1 HEAP$2_1))
                                       (=>
                                          (and
                                             (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1)
                                             cmp$1_0_1
                                             cmp3$1_0_1
                                             (not cmp$2_0_1)
                                             (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                          END_QUERY))))))))))))))
(rule
   (let
      ((c1.0$1_0_1 c1.0$1_0_old_1)
       (c2.0$1_0_1 c2.0$1_0_old_1)
       (n.addr.0$1_0_1 n.addr.0$1_0_old_1))
      (let
         ((s1.addr.0$1_0_1 s1.addr.0$1_0_old_1)
          (s2.addr.0$1_0_1 s2.addr.0$1_0_old_1)
          (HEAP$1_1 HEAP$1_old_1)
          (cmp$1_0_1 (> (abs n.addr.0$1_0_1) (abs 0))))
         (let
            ((incdec.ptr$1_0_1 (+ s1.addr.0$1_0_1 1))
             (_$1_0_1 (select HEAP$1_1 s1.addr.0$1_0_1)))
            (let
               ((incdec.ptr1$1_0_1 (+ s2.addr.0$1_0_1 1))
                (_$1_1_1 (select HEAP$1_1 s2.addr.0$1_0_1))
                (conv2$1_0_1 _$1_0_1))
               (let
                  ((cmp3$1_0_1 (= conv2$1_0_1 0)))
                  (let
                     ((conv5$1_0_1 _$1_0_1)
                      (conv6$1_0_1 _$1_1_1))
                     (let
                        ((cmp7$1_0_1 (distinct conv5$1_0_1 conv6$1_0_1)))
                        (let
                           ((c1.0.sink$1_0_1 _$1_0_1)
                            (c2.0.sink$1_0_1 _$1_1_1))
                           (let
                              ((conv11$1_0_1 c1.0.sink$1_0_1)
                               (conv12$1_0_1 c2.0.sink$1_0_1))
                              (let
                                 ((sub13$1_0_1 (- conv11$1_0_1 conv12$1_0_1)))
                                 (let
                                    ((result$1_1 sub13$1_0_1)
                                     (HEAP$1_res_1 HEAP$1_1)
                                     (a.0$2_0_1 a.0$2_0_old_1)
                                     (add.ptr$2_0_1 add.ptr$2_0_old_1))
                                    (let
                                       ((b.0$2_0_1 b.0$2_0_old_1)
                                        (HEAP$2_1 HEAP$2_old_1)
                                        (cmp$2_0_1 (distinct a.0$2_0_1 add.ptr$2_0_1)))
                                       (let
                                          ((_$2_0_1 (select HEAP$2_1 a.0$2_0_1)))
                                          (let
                                             ((conv1$2_0_1 _$2_0_1)
                                              (_$2_1_1 (select HEAP$2_1 b.0$2_0_1)))
                                             (let
                                                ((conv2$2_0_1 _$2_1_1))
                                                (let
                                                   ((sub$2_0_1 (- conv1$2_0_1 conv2$2_0_1)))
                                                   (let
                                                      ((tobool3$2_0_1 (distinct sub$2_0_1 0)))
                                                      (let
                                                         ((retval.0$2_0_1 sub$2_0_1))
                                                         (let
                                                            ((result$2_1 retval.0$2_0_1)
                                                             (HEAP$2_res_1 HEAP$2_1))
                                                            (=>
                                                               (and
                                                                  (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1)
                                                                  cmp$1_0_1
                                                                  (not cmp3$1_0_1)
                                                                  cmp7$1_0_1
                                                                  cmp$2_0_1
                                                                  tobool3$2_0_1
                                                                  (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                                               END_QUERY)))))))))))))))))))))
(rule
   (let
      ((c1.0$1_0_1 c1.0$1_0_old_1)
       (c2.0$1_0_1 c2.0$1_0_old_1)
       (n.addr.0$1_0_1 n.addr.0$1_0_old_1))
      (let
         ((s1.addr.0$1_0_1 s1.addr.0$1_0_old_1)
          (s2.addr.0$1_0_1 s2.addr.0$1_0_old_1)
          (HEAP$1_1 HEAP$1_old_1)
          (cmp$1_0_1 (> (abs n.addr.0$1_0_1) (abs 0))))
         (let
            ((incdec.ptr$1_0_1 (+ s1.addr.0$1_0_1 1))
             (_$1_0_1 (select HEAP$1_1 s1.addr.0$1_0_1)))
            (let
               ((incdec.ptr1$1_0_1 (+ s2.addr.0$1_0_1 1))
                (_$1_1_1 (select HEAP$1_1 s2.addr.0$1_0_1))
                (conv2$1_0_1 _$1_0_1))
               (let
                  ((cmp3$1_0_1 (= conv2$1_0_1 0)))
                  (let
                     ((conv5$1_0_1 _$1_0_1)
                      (conv6$1_0_1 _$1_1_1))
                     (let
                        ((cmp7$1_0_1 (distinct conv5$1_0_1 conv6$1_0_1)))
                        (let
                           ((c1.0.sink$1_0_1 _$1_0_1)
                            (c2.0.sink$1_0_1 _$1_1_1))
                           (let
                              ((conv11$1_0_1 c1.0.sink$1_0_1)
                               (conv12$1_0_1 c2.0.sink$1_0_1))
                              (let
                                 ((sub13$1_0_1 (- conv11$1_0_1 conv12$1_0_1)))
                                 (let
                                    ((result$1_1 sub13$1_0_1)
                                     (HEAP$1_res_1 HEAP$1_1)
                                     (a.0$2_0_1 a.0$2_0_old_1)
                                     (add.ptr$2_0_1 add.ptr$2_0_old_1))
                                    (let
                                       ((b.0$2_0_1 b.0$2_0_old_1)
                                        (HEAP$2_1 HEAP$2_old_1)
                                        (cmp$2_0_1 (distinct a.0$2_0_1 add.ptr$2_0_1)))
                                       (let
                                          ((_$2_0_1 (select HEAP$2_1 a.0$2_0_1)))
                                          (let
                                             ((conv1$2_0_1 _$2_0_1)
                                              (_$2_1_1 (select HEAP$2_1 b.0$2_0_1)))
                                             (let
                                                ((conv2$2_0_1 _$2_1_1))
                                                (let
                                                   ((sub$2_0_1 (- conv1$2_0_1 conv2$2_0_1)))
                                                   (let
                                                      ((tobool3$2_0_1 (distinct sub$2_0_1 0)))
                                                      (let
                                                         ((_$2_2_1 (select HEAP$2_1 a.0$2_0_1)))
                                                         (let
                                                            ((tobool4$2_0_1 (distinct _$2_2_1 0)))
                                                            (let
                                                               ((retval.0$2_0_1 0))
                                                               (let
                                                                  ((result$2_1 retval.0$2_0_1)
                                                                   (HEAP$2_res_1 HEAP$2_1))
                                                                  (=>
                                                                     (and
                                                                        (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1)
                                                                        cmp$1_0_1
                                                                        (not cmp3$1_0_1)
                                                                        cmp7$1_0_1
                                                                        cmp$2_0_1
                                                                        (not tobool3$2_0_1)
                                                                        (not tobool4$2_0_1)
                                                                        (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                                                     END_QUERY)))))))))))))))))))))))
(rule
   (let
      ((c1.0$1_0_1 c1.0$1_0_old_1)
       (c2.0$1_0_1 c2.0$1_0_old_1)
       (n.addr.0$1_0_1 n.addr.0$1_0_old_1))
      (let
         ((s1.addr.0$1_0_1 s1.addr.0$1_0_old_1)
          (s2.addr.0$1_0_1 s2.addr.0$1_0_old_1)
          (HEAP$1_1 HEAP$1_old_1)
          (cmp$1_0_1 (> (abs n.addr.0$1_0_1) (abs 0))))
         (let
            ((incdec.ptr$1_0_1 (+ s1.addr.0$1_0_1 1))
             (_$1_0_1 (select HEAP$1_1 s1.addr.0$1_0_1)))
            (let
               ((incdec.ptr1$1_0_1 (+ s2.addr.0$1_0_1 1))
                (_$1_1_1 (select HEAP$1_1 s2.addr.0$1_0_1))
                (conv2$1_0_1 _$1_0_1))
               (let
                  ((cmp3$1_0_1 (= conv2$1_0_1 0)))
                  (let
                     ((conv5$1_0_1 _$1_0_1)
                      (conv6$1_0_1 _$1_1_1))
                     (let
                        ((cmp7$1_0_1 (distinct conv5$1_0_1 conv6$1_0_1)))
                        (let
                           ((c1.0.sink$1_0_1 _$1_0_1)
                            (c2.0.sink$1_0_1 _$1_1_1))
                           (let
                              ((conv11$1_0_1 c1.0.sink$1_0_1)
                               (conv12$1_0_1 c2.0.sink$1_0_1))
                              (let
                                 ((sub13$1_0_1 (- conv11$1_0_1 conv12$1_0_1)))
                                 (let
                                    ((result$1_1 sub13$1_0_1)
                                     (HEAP$1_res_1 HEAP$1_1)
                                     (a.0$2_0_1 a.0$2_0_old_1)
                                     (add.ptr$2_0_1 add.ptr$2_0_old_1))
                                    (let
                                       ((b.0$2_0_1 b.0$2_0_old_1)
                                        (HEAP$2_1 HEAP$2_old_1)
                                        (cmp$2_0_1 (distinct a.0$2_0_1 add.ptr$2_0_1)))
                                       (let
                                          ((retval.0$2_0_1 0))
                                          (let
                                             ((result$2_1 retval.0$2_0_1)
                                              (HEAP$2_res_1 HEAP$2_1))
                                             (=>
                                                (and
                                                   (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1)
                                                   cmp$1_0_1
                                                   (not cmp3$1_0_1)
                                                   cmp7$1_0_1
                                                   (not cmp$2_0_1)
                                                   (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                                END_QUERY))))))))))))))))
(rule
   (let
      ((c1.0$1_0_1 c1.0$1_0_old_1)
       (c2.0$1_0_1 c2.0$1_0_old_1)
       (n.addr.0$1_0_1 n.addr.0$1_0_old_1))
      (let
         ((s1.addr.0$1_0_1 s1.addr.0$1_0_old_1)
          (s2.addr.0$1_0_1 s2.addr.0$1_0_old_1)
          (HEAP$1_1 HEAP$1_old_1)
          (cmp$1_0_1 (> (abs n.addr.0$1_0_1) (abs 0))))
         (let
            ((c1.0.sink$1_0_1 c1.0$1_0_1)
             (c2.0.sink$1_0_1 c2.0$1_0_1))
            (let
               ((conv11$1_0_1 c1.0.sink$1_0_1)
                (conv12$1_0_1 c2.0.sink$1_0_1))
               (let
                  ((sub13$1_0_1 (- conv11$1_0_1 conv12$1_0_1)))
                  (let
                     ((result$1_1 sub13$1_0_1)
                      (HEAP$1_res_1 HEAP$1_1)
                      (a.0$2_0_1 a.0$2_0_old_1)
                      (add.ptr$2_0_1 add.ptr$2_0_old_1))
                     (let
                        ((b.0$2_0_1 b.0$2_0_old_1)
                         (HEAP$2_1 HEAP$2_old_1)
                         (cmp$2_0_1 (distinct a.0$2_0_1 add.ptr$2_0_1)))
                        (let
                           ((_$2_0_1 (select HEAP$2_1 a.0$2_0_1)))
                           (let
                              ((conv1$2_0_1 _$2_0_1)
                               (_$2_1_1 (select HEAP$2_1 b.0$2_0_1)))
                              (let
                                 ((conv2$2_0_1 _$2_1_1))
                                 (let
                                    ((sub$2_0_1 (- conv1$2_0_1 conv2$2_0_1)))
                                    (let
                                       ((tobool3$2_0_1 (distinct sub$2_0_1 0)))
                                       (let
                                          ((retval.0$2_0_1 sub$2_0_1))
                                          (let
                                             ((result$2_1 retval.0$2_0_1)
                                              (HEAP$2_res_1 HEAP$2_1))
                                             (=>
                                                (and
                                                   (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1)
                                                   (not cmp$1_0_1)
                                                   cmp$2_0_1
                                                   tobool3$2_0_1
                                                   (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                                END_QUERY))))))))))))))))
(rule
   (let
      ((c1.0$1_0_1 c1.0$1_0_old_1)
       (c2.0$1_0_1 c2.0$1_0_old_1)
       (n.addr.0$1_0_1 n.addr.0$1_0_old_1))
      (let
         ((s1.addr.0$1_0_1 s1.addr.0$1_0_old_1)
          (s2.addr.0$1_0_1 s2.addr.0$1_0_old_1)
          (HEAP$1_1 HEAP$1_old_1)
          (cmp$1_0_1 (> (abs n.addr.0$1_0_1) (abs 0))))
         (let
            ((c1.0.sink$1_0_1 c1.0$1_0_1)
             (c2.0.sink$1_0_1 c2.0$1_0_1))
            (let
               ((conv11$1_0_1 c1.0.sink$1_0_1)
                (conv12$1_0_1 c2.0.sink$1_0_1))
               (let
                  ((sub13$1_0_1 (- conv11$1_0_1 conv12$1_0_1)))
                  (let
                     ((result$1_1 sub13$1_0_1)
                      (HEAP$1_res_1 HEAP$1_1)
                      (a.0$2_0_1 a.0$2_0_old_1)
                      (add.ptr$2_0_1 add.ptr$2_0_old_1))
                     (let
                        ((b.0$2_0_1 b.0$2_0_old_1)
                         (HEAP$2_1 HEAP$2_old_1)
                         (cmp$2_0_1 (distinct a.0$2_0_1 add.ptr$2_0_1)))
                        (let
                           ((_$2_0_1 (select HEAP$2_1 a.0$2_0_1)))
                           (let
                              ((conv1$2_0_1 _$2_0_1)
                               (_$2_1_1 (select HEAP$2_1 b.0$2_0_1)))
                              (let
                                 ((conv2$2_0_1 _$2_1_1))
                                 (let
                                    ((sub$2_0_1 (- conv1$2_0_1 conv2$2_0_1)))
                                    (let
                                       ((tobool3$2_0_1 (distinct sub$2_0_1 0)))
                                       (let
                                          ((_$2_2_1 (select HEAP$2_1 a.0$2_0_1)))
                                          (let
                                             ((tobool4$2_0_1 (distinct _$2_2_1 0)))
                                             (let
                                                ((retval.0$2_0_1 0))
                                                (let
                                                   ((result$2_1 retval.0$2_0_1)
                                                    (HEAP$2_res_1 HEAP$2_1))
                                                   (=>
                                                      (and
                                                         (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1)
                                                         (not cmp$1_0_1)
                                                         cmp$2_0_1
                                                         (not tobool3$2_0_1)
                                                         (not tobool4$2_0_1)
                                                         (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                                      END_QUERY))))))))))))))))))
(rule
   (let
      ((c1.0$1_0_1 c1.0$1_0_old_1)
       (c2.0$1_0_1 c2.0$1_0_old_1)
       (n.addr.0$1_0_1 n.addr.0$1_0_old_1))
      (let
         ((s1.addr.0$1_0_1 s1.addr.0$1_0_old_1)
          (s2.addr.0$1_0_1 s2.addr.0$1_0_old_1)
          (HEAP$1_1 HEAP$1_old_1)
          (cmp$1_0_1 (> (abs n.addr.0$1_0_1) (abs 0))))
         (let
            ((c1.0.sink$1_0_1 c1.0$1_0_1)
             (c2.0.sink$1_0_1 c2.0$1_0_1))
            (let
               ((conv11$1_0_1 c1.0.sink$1_0_1)
                (conv12$1_0_1 c2.0.sink$1_0_1))
               (let
                  ((sub13$1_0_1 (- conv11$1_0_1 conv12$1_0_1)))
                  (let
                     ((result$1_1 sub13$1_0_1)
                      (HEAP$1_res_1 HEAP$1_1)
                      (a.0$2_0_1 a.0$2_0_old_1)
                      (add.ptr$2_0_1 add.ptr$2_0_old_1))
                     (let
                        ((b.0$2_0_1 b.0$2_0_old_1)
                         (HEAP$2_1 HEAP$2_old_1)
                         (cmp$2_0_1 (distinct a.0$2_0_1 add.ptr$2_0_1)))
                        (let
                           ((retval.0$2_0_1 0))
                           (let
                              ((result$2_1 retval.0$2_0_1)
                               (HEAP$2_res_1 HEAP$2_1))
                              (=>
                                 (and
                                    (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1)
                                    (not cmp$1_0_1)
                                    (not cmp$2_0_1)
                                    (not (OUT_INV result$1_1 result$2_1 HEAP$1_1 HEAP$2_1)))
                                 END_QUERY)))))))))))
(rule
   (let
      ((c1.0$1_0_1 c1.0$1_0_old_1)
       (c2.0$1_0_1 c2.0$1_0_old_1)
       (n.addr.0$1_0_1 n.addr.0$1_0_old_1))
      (let
         ((s1.addr.0$1_0_1 s1.addr.0$1_0_old_1)
          (s2.addr.0$1_0_1 s2.addr.0$1_0_old_1)
          (HEAP$1_1 HEAP$1_old_1)
          (cmp$1_0_1 (> (abs n.addr.0$1_0_1) (abs 0))))
         (let
            ((incdec.ptr$1_0_1 (+ s1.addr.0$1_0_1 1))
             (_$1_0_1 (select HEAP$1_1 s1.addr.0$1_0_1)))
            (let
               ((incdec.ptr1$1_0_1 (+ s2.addr.0$1_0_1 1))
                (_$1_1_1 (select HEAP$1_1 s2.addr.0$1_0_1))
                (conv2$1_0_1 _$1_0_1))
               (let
                  ((cmp3$1_0_1 (= conv2$1_0_1 0)))
                  (let
                     ((conv5$1_0_1 _$1_0_1)
                      (conv6$1_0_1 _$1_1_1))
                     (let
                        ((cmp7$1_0_1 (distinct conv5$1_0_1 conv6$1_0_1)))
                        (let
                           ((dec$1_0_1 (+ n.addr.0$1_0_1 (- 1))))
                           (let
                              ((c2.0$1_0_2 _$1_1_1)
                               (c1.0$1_0_2 _$1_0_1)
                               (n.addr.0$1_0_2 dec$1_0_1)
                               (s2.addr.0$1_0_2 incdec.ptr1$1_0_1)
                               (s1.addr.0$1_0_2 incdec.ptr$1_0_1)
                               (a.0$2_0_1 a.0$2_0_old_1)
                               (add.ptr$2_0_1 add.ptr$2_0_old_1))
                              (let
                                 ((b.0$2_0_1 b.0$2_0_old_1)
                                  (HEAP$2_1 HEAP$2_old_1)
                                  (cmp$2_0_1 (distinct a.0$2_0_1 add.ptr$2_0_1)))
                                 (let
                                    ((_$2_0_1 (select HEAP$2_1 a.0$2_0_1)))
                                    (let
                                       ((conv1$2_0_1 _$2_0_1)
                                        (_$2_1_1 (select HEAP$2_1 b.0$2_0_1)))
                                       (let
                                          ((conv2$2_0_1 _$2_1_1))
                                          (let
                                             ((sub$2_0_1 (- conv1$2_0_1 conv2$2_0_1)))
                                             (let
                                                ((tobool3$2_0_1 (distinct sub$2_0_1 0)))
                                                (let
                                                   ((_$2_2_1 (select HEAP$2_1 a.0$2_0_1)))
                                                   (let
                                                      ((tobool4$2_0_1 (distinct _$2_2_1 0)))
                                                      (let
                                                         ((incdec.ptr$2_0_1 (+ a.0$2_0_1 1))
                                                          (incdec.ptr7$2_0_1 (+ b.0$2_0_1 1)))
                                                         (let
                                                            ((a.0$2_0_2 incdec.ptr$2_0_1)
                                                             (b.0$2_0_2 incdec.ptr7$2_0_1))
                                                            (=>
                                                               (and
                                                                  (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1)
                                                                  cmp$1_0_1
                                                                  (not cmp3$1_0_1)
                                                                  (not cmp7$1_0_1)
                                                                  cmp$2_0_1
                                                                  (not tobool3$2_0_1)
                                                                  tobool4$2_0_1)
                                                               (INV_MAIN_42 c1.0$1_0_2 c2.0$1_0_2 n.addr.0$1_0_2 s1.addr.0$1_0_2 s2.addr.0$1_0_2 HEAP$1_1 a.0$2_0_2 add.ptr$2_0_1 b.0$2_0_2 HEAP$2_1))))))))))))))))))))))
(rule
   (let
      ((c1.0$1_0_1 c1.0$1_0_old_1)
       (c2.0$1_0_1 c2.0$1_0_old_1)
       (n.addr.0$1_0_1 n.addr.0$1_0_old_1))
      (let
         ((s1.addr.0$1_0_1 s1.addr.0$1_0_old_1)
          (s2.addr.0$1_0_1 s2.addr.0$1_0_old_1)
          (HEAP$1_1 HEAP$1_old_1)
          (cmp$1_0_1 (> (abs n.addr.0$1_0_1) (abs 0))))
         (let
            ((incdec.ptr$1_0_1 (+ s1.addr.0$1_0_1 1))
             (_$1_0_1 (select HEAP$1_1 s1.addr.0$1_0_1)))
            (let
               ((incdec.ptr1$1_0_1 (+ s2.addr.0$1_0_1 1))
                (_$1_1_1 (select HEAP$1_1 s2.addr.0$1_0_1))
                (conv2$1_0_1 _$1_0_1))
               (let
                  ((cmp3$1_0_1 (= conv2$1_0_1 0)))
                  (let
                     ((conv5$1_0_1 _$1_0_1)
                      (conv6$1_0_1 _$1_1_1))
                     (let
                        ((cmp7$1_0_1 (distinct conv5$1_0_1 conv6$1_0_1)))
                        (let
                           ((dec$1_0_1 (+ n.addr.0$1_0_1 (- 1))))
                           (let
                              ((c2.0$1_0_2 _$1_1_1)
                               (c1.0$1_0_2 _$1_0_1)
                               (n.addr.0$1_0_2 dec$1_0_1)
                               (s2.addr.0$1_0_2 incdec.ptr1$1_0_1)
                               (s1.addr.0$1_0_2 incdec.ptr$1_0_1))
                              (=>
                                 (and
                                    (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1)
                                    cmp$1_0_1
                                    (not cmp3$1_0_1)
                                    (not cmp7$1_0_1)
                                    (let
                                       ((a.0$2_0_1 a.0$2_0_old_1)
                                        (add.ptr$2_0_1 add.ptr$2_0_old_1))
                                       (let
                                          ((b.0$2_0_1 b.0$2_0_old_1)
                                           (HEAP$2_1 HEAP$2_old_1)
                                           (cmp$2_0_1 (distinct a.0$2_0_1 add.ptr$2_0_1)))
                                          (=>
                                             cmp$2_0_1
                                             (let
                                                ((_$2_0_1 (select HEAP$2_1 a.0$2_0_1)))
                                                (let
                                                   ((conv1$2_0_1 _$2_0_1)
                                                    (_$2_1_1 (select HEAP$2_1 b.0$2_0_1)))
                                                   (let
                                                      ((conv2$2_0_1 _$2_1_1))
                                                      (let
                                                         ((sub$2_0_1 (- conv1$2_0_1 conv2$2_0_1)))
                                                         (let
                                                            ((tobool3$2_0_1 (distinct sub$2_0_1 0)))
                                                            (=>
                                                               (not tobool3$2_0_1)
                                                               (let
                                                                  ((_$2_2_1 (select HEAP$2_1 a.0$2_0_1)))
                                                                  (let
                                                                     ((tobool4$2_0_1 (distinct _$2_2_1 0)))
                                                                     (=>
                                                                        tobool4$2_0_1
                                                                        (let
                                                                           ((incdec.ptr$2_0_1 (+ a.0$2_0_1 1))
                                                                            (incdec.ptr7$2_0_1 (+ b.0$2_0_1 1)))
                                                                           (let
                                                                              ((a.0$2_0_2 incdec.ptr$2_0_1)
                                                                               (b.0$2_0_2 incdec.ptr7$2_0_1))
                                                                              false)))))))))))))))
                                 (INV_MAIN_42 c1.0$1_0_2 c2.0$1_0_2 n.addr.0$1_0_2 s1.addr.0$1_0_2 s2.addr.0$1_0_2 HEAP$1_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1))))))))))))
(rule
   (let
      ((a.0$2_0_1 a.0$2_0_old_1)
       (add.ptr$2_0_1 add.ptr$2_0_old_1))
      (let
         ((b.0$2_0_1 b.0$2_0_old_1)
          (HEAP$2_1 HEAP$2_old_1)
          (cmp$2_0_1 (distinct a.0$2_0_1 add.ptr$2_0_1)))
         (let
            ((_$2_0_1 (select HEAP$2_1 a.0$2_0_1)))
            (let
               ((conv1$2_0_1 _$2_0_1)
                (_$2_1_1 (select HEAP$2_1 b.0$2_0_1)))
               (let
                  ((conv2$2_0_1 _$2_1_1))
                  (let
                     ((sub$2_0_1 (- conv1$2_0_1 conv2$2_0_1)))
                     (let
                        ((tobool3$2_0_1 (distinct sub$2_0_1 0)))
                        (let
                           ((_$2_2_1 (select HEAP$2_1 a.0$2_0_1)))
                           (let
                              ((tobool4$2_0_1 (distinct _$2_2_1 0)))
                              (let
                                 ((incdec.ptr$2_0_1 (+ a.0$2_0_1 1))
                                  (incdec.ptr7$2_0_1 (+ b.0$2_0_1 1)))
                                 (let
                                    ((a.0$2_0_2 incdec.ptr$2_0_1)
                                     (b.0$2_0_2 incdec.ptr7$2_0_1))
                                    (=>
                                       (and
                                          (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_old_1 add.ptr$2_0_old_1 b.0$2_0_old_1 HEAP$2_old_1)
                                          cmp$2_0_1
                                          (not tobool3$2_0_1)
                                          tobool4$2_0_1
                                          (let
                                             ((c1.0$1_0_1 c1.0$1_0_old_1)
                                              (c2.0$1_0_1 c2.0$1_0_old_1)
                                              (n.addr.0$1_0_1 n.addr.0$1_0_old_1))
                                             (let
                                                ((s1.addr.0$1_0_1 s1.addr.0$1_0_old_1)
                                                 (s2.addr.0$1_0_1 s2.addr.0$1_0_old_1)
                                                 (HEAP$1_1 HEAP$1_old_1)
                                                 (cmp$1_0_1 (> (abs n.addr.0$1_0_1) (abs 0))))
                                                (=>
                                                   cmp$1_0_1
                                                   (let
                                                      ((incdec.ptr$1_0_1 (+ s1.addr.0$1_0_1 1))
                                                       (_$1_0_1 (select HEAP$1_1 s1.addr.0$1_0_1)))
                                                      (let
                                                         ((incdec.ptr1$1_0_1 (+ s2.addr.0$1_0_1 1))
                                                          (_$1_1_1 (select HEAP$1_1 s2.addr.0$1_0_1))
                                                          (conv2$1_0_1 _$1_0_1))
                                                         (let
                                                            ((cmp3$1_0_1 (= conv2$1_0_1 0)))
                                                            (=>
                                                               (not cmp3$1_0_1)
                                                               (let
                                                                  ((conv5$1_0_1 _$1_0_1)
                                                                   (conv6$1_0_1 _$1_1_1))
                                                                  (let
                                                                     ((cmp7$1_0_1 (distinct conv5$1_0_1 conv6$1_0_1)))
                                                                     (=>
                                                                        (not cmp7$1_0_1)
                                                                        (let
                                                                           ((dec$1_0_1 (+ n.addr.0$1_0_1 (- 1))))
                                                                           (let
                                                                              ((c2.0$1_0_2 _$1_1_1)
                                                                               (c1.0$1_0_2 _$1_0_1)
                                                                               (n.addr.0$1_0_2 dec$1_0_1)
                                                                               (s2.addr.0$1_0_2 incdec.ptr1$1_0_1)
                                                                               (s1.addr.0$1_0_2 incdec.ptr$1_0_1))
                                                                              false)))))))))))))
                                       (INV_MAIN_42 c1.0$1_0_old_1 c2.0$1_0_old_1 n.addr.0$1_0_old_1 s1.addr.0$1_0_old_1 s2.addr.0$1_0_old_1 HEAP$1_old_1 a.0$2_0_2 add.ptr$2_0_1 b.0$2_0_2 HEAP$2_1))))))))))))))
(query
   END_QUERY
   :print-certificate
   true)
